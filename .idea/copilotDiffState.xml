<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/frontend/src/assets/icons/task.svg">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/assets/icons/task.svg" />
              <option name="originalContent" value="&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; shape-rendering=&quot;geometricPrecision&quot; text-rendering=&quot;geometricPrecision&quot; image-rendering=&quot;optimizeQuality&quot; fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; zoomAndPan=&quot;magnify&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; version=&quot;1.2&quot; viewBox=&quot;568.13 243 303.75 324&quot;&gt;&lt;defs&gt;&lt;clipPath id=&quot;19803a20b5&quot;&gt;&lt;path d=&quot;M 568.125 384 L 871.875 384 L 871.875 567 L 568.125 567 Z M 568.125 384 &quot;&gt;&lt;/path&gt;&lt;/clipPath&gt;&lt;clipPath id=&quot;47458055ab&quot;&gt;&lt;path d=&quot;M 568.125 243 L 871.875 243 L 871.875 365 L 568.125 365 Z M 568.125 243 &quot;&gt;&lt;/path&gt;&lt;/clipPath&gt;&lt;/defs&gt;&lt;g id=&quot;f8c13798bc&quot;&gt;&lt;g clip-rule=&quot;nonzero&quot; clip-path=&quot;url(#19803a20b5)&quot;&gt;&lt;path d=&quot;M 851.625 536.625 C 851.625 537.289062 851.558594 537.949219 851.429688 538.601562 C 851.300781 539.253906 851.109375 539.886719 850.855469 540.5 C 850.601562 541.113281 850.289062 541.699219 849.917969 542.25 C 849.550781 542.804688 849.128906 543.3125 848.660156 543.785156 C 848.1875 544.253906 847.679688 544.675781 847.125 545.042969 C 846.574219 545.414062 845.988281 545.726562 845.375 545.980469 C 844.761719 546.234375 844.128906 546.425781 843.476562 546.554688 C 842.824219 546.683594 842.164062 546.75 841.5 546.75 L 598.5 546.75 C 597.835938 546.75 597.175781 546.683594 596.523438 546.554688 C 595.871094 546.425781 595.238281 546.234375 594.625 545.980469 C 594.011719 545.726562 593.425781 545.414062 592.875 545.042969 C 592.320312 544.675781 591.8125 544.253906 591.339844 543.785156 C 590.871094 543.3125 590.449219 542.804688 590.082031 542.25 C 589.710938 541.699219 589.398438 541.113281 589.144531 540.5 C 588.890625 539.886719 588.699219 539.253906 588.570312 538.601562 C 588.441406 537.949219 588.375 537.289062 588.375 536.625 L 588.375 384.75 L 568.125 384.75 L 568.125 536.625 C 568.125 537.621094 568.171875 538.613281 568.269531 539.601562 C 568.367188 540.59375 568.515625 541.574219 568.707031 542.550781 C 568.902344 543.527344 569.144531 544.492188 569.433594 545.441406 C 569.722656 546.394531 570.054688 547.328125 570.4375 548.25 C 570.816406 549.167969 571.242188 550.066406 571.710938 550.945312 C 572.179688 551.820312 572.691406 552.671875 573.242188 553.5 C 573.796875 554.328125 574.390625 555.125 575.019531 555.894531 C 575.652344 556.664062 576.316406 557.398438 577.023438 558.101562 C 577.726562 558.808594 578.460938 559.472656 579.230469 560.105469 C 580 560.734375 580.796875 561.328125 581.625 561.882812 C 582.453125 562.433594 583.304688 562.945312 584.179688 563.414062 C 585.058594 563.882812 585.957031 564.308594 586.875 564.6875 C 587.796875 565.070312 588.730469 565.402344 589.683594 565.691406 C 590.632812 565.980469 591.597656 566.222656 592.574219 566.417969 C 593.550781 566.609375 594.53125 566.757812 595.523438 566.855469 C 596.511719 566.953125 597.503906 567 598.5 567 L 841.5 567 C 842.496094 567 843.488281 566.953125 844.476562 566.855469 C 845.46875 566.757812 846.449219 566.609375 847.425781 566.417969 C 848.402344 566.222656 849.367188 565.980469 850.316406 565.691406 C 851.269531 565.402344 852.203125 565.070312 853.125 564.6875 C 854.042969 564.308594 854.941406 563.882812 855.820312 563.414062 C 856.695312 562.945312 857.546875 562.433594 858.375 561.882812 C 859.203125 561.328125 860 560.734375 860.769531 560.105469 C 861.539062 559.472656 862.273438 558.808594 862.976562 558.101562 C 863.683594 557.398438 864.347656 556.664062 864.980469 555.894531 C 865.609375 555.125 866.203125 554.328125 866.753906 553.5 C 867.308594 552.671875 867.820312 551.820312 868.289062 550.945312 C 868.757812 550.066406 869.183594 549.167969 869.5625 548.25 C 869.945312 547.328125 870.277344 546.394531 870.566406 545.441406 C 870.855469 544.492188 871.097656 543.527344 871.292969 542.550781 C 871.484375 541.574219 871.632812 540.59375 871.730469 539.601562 C 871.828125 538.613281 871.875 537.621094 871.875 536.625 L 871.875 384.75 L 851.625 384.75 Z M 851.625 536.625 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g clip-rule=&quot;nonzero&quot; clip-path=&quot;url(#47458055ab)&quot;&gt;&lt;path style=&quot;&quot; d=&quot;M 861.75 273.375 L 801 273.375 L 801 253.125 C 801 252.460938 800.933594 251.800781 800.804688 251.148438 C 800.675781 250.496094 800.484375 249.863281 800.230469 249.25 C 799.976562 248.636719 799.664062 248.050781 799.292969 247.5 C 798.925781 246.945312 798.503906 246.4375 798.035156 245.964844 C 797.5625 245.496094 797.054688 245.074219 796.5 244.707031 C 795.949219 244.335938 795.363281 244.023438 794.75 243.769531 C 794.136719 243.515625 793.503906 243.324219 792.851562 243.195312 C 792.199219 243.066406 791.539062 243 790.875 243 C 790.210938 243 789.550781 243.066406 788.898438 243.195312 C 788.246094 243.324219 787.613281 243.515625 787 243.769531 C 786.386719 244.023438 785.800781 244.335938 785.25 244.707031 C 784.695312 245.074219 784.1875 245.496094 783.714844 245.964844 C 783.246094 246.4375 782.824219 246.945312 782.457031 247.5 C 782.085938 248.050781 781.773438 248.636719 781.519531 249.25 C 781.265625 249.863281 781.074219 250.496094 780.945312 251.148438 C 780.816406 251.800781 780.75 252.460938 780.75 253.125 L 780.75 273.375 L 659.25 273.375 L 659.25 253.125 C 659.25 252.460938 659.183594 251.800781 659.054688 251.148438 C 658.925781 250.496094 658.734375 249.863281 658.480469 249.25 C 658.226562 248.636719 657.914062 248.050781 657.542969 247.5 C 657.175781 246.945312 656.753906 246.4375 656.285156 245.964844 C 655.8125 245.496094 655.304688 245.074219 654.75 244.707031 C 654.199219 244.335938 653.613281 244.023438 653 243.769531 C 652.386719 243.515625 651.753906 243.324219 651.101562 243.195312 C 650.449219 243.066406 649.789062 243 649.125 243 C 648.460938 243 647.800781 243.066406 647.148438 243.195312 C 646.496094 243.324219 645.863281 243.515625 645.25 243.769531 C 644.636719 244.023438 644.050781 244.335938 643.5 244.707031 C 642.945312 245.074219 642.4375 245.496094 641.964844 245.964844 C 641.496094 246.4375 641.074219 246.945312 640.707031 247.5 C 640.335938 248.050781 640.023438 248.636719 639.769531 249.25 C 639.515625 249.863281 639.324219 250.496094 639.195312 251.148438 C 639.066406 251.800781 639 252.460938 639 253.125 L 639 273.375 L 578.25 273.375 C 577.585938 273.375 576.925781 273.441406 576.273438 273.570312 C 575.621094 273.699219 574.988281 273.890625 574.375 274.144531 C 573.761719 274.398438 573.175781 274.710938 572.625 275.082031 C 572.070312 275.449219 571.5625 275.871094 571.089844 276.339844 C 570.621094 276.8125 570.199219 277.320312 569.832031 277.875 C 569.460938 278.425781 569.148438 279.011719 568.894531 279.625 C 568.640625 280.238281 568.449219 280.871094 568.320312 281.523438 C 568.191406 282.175781 568.125 282.835938 568.125 283.5 L 568.125 354.375 C 568.125 355.039062 568.191406 355.699219 568.320312 356.351562 C 568.449219 357.003906 568.640625 357.636719 568.894531 358.25 C 569.148438 358.863281 569.460938 359.449219 569.832031 360 C 570.199219 360.554688 570.621094 361.0625 571.089844 361.535156 C 571.5625 362.003906 572.070312 362.425781 572.625 362.792969 C 573.175781 363.164062 573.761719 363.476562 574.375 363.730469 C 574.988281 363.984375 575.621094 364.175781 576.273438 364.304688 C 576.925781 364.433594 577.585938 364.5 578.25 364.5 L 861.75 364.5 C 862.414062 364.5 863.074219 364.433594 863.726562 364.304688 C 864.378906 364.175781 865.011719 363.984375 865.625 363.730469 C 866.238281 363.476562 866.824219 363.164062 867.375 362.792969 C 867.929688 362.425781 868.4375 362.003906 868.910156 361.535156 C 869.378906 361.0625 869.800781 360.554688 870.167969 360 C 870.539062 359.449219 870.851562 358.863281 871.105469 358.25 C 871.359375 357.636719 871.550781 357.003906 871.679688 356.351562 C 871.808594 355.699219 871.875 355.039062 871.875 354.375 L 871.875 283.5 C 871.875 282.835938 871.808594 282.175781 871.679688 281.523438 C 871.550781 280.871094 871.359375 280.238281 871.105469 279.625 C 870.851562 279.011719 870.539062 278.425781 870.167969 277.875 C 869.800781 277.320312 869.378906 276.8125 868.910156 276.339844 C 868.4375 275.871094 867.929688 275.449219 867.375 275.082031 C 866.824219 274.710938 866.238281 274.398438 865.625 274.144531 C 865.011719 273.890625 864.378906 273.699219 863.726562 273.570312 C 863.074219 273.441406 862.414062 273.375 861.75 273.375 Z M 851.625 344.25 L 588.375 344.25 L 588.375 293.625 L 639 293.625 L 639 303.75 C 639 304.414062 639.066406 305.074219 639.195312 305.726562 C 639.324219 306.378906 639.515625 307.011719 639.769531 307.625 C 640.023438 308.238281 640.335938 308.824219 640.707031 309.375 C 641.074219 309.929688 641.496094 310.4375 641.964844 310.910156 C 642.4375 311.378906 642.945312 311.800781 643.5 312.167969 C 644.050781 312.539062 644.636719 312.851562 645.25 313.105469 C 645.863281 313.359375 646.496094 313.550781 647.148438 313.679688 C 647.800781 313.808594 648.460938 313.875 649.125 313.875 C 649.789062 313.875 650.449219 313.808594 651.101562 313.679688 C 651.753906 313.550781 652.386719 313.359375 653 313.105469 C 653.613281 312.851562 654.199219 312.539062 654.75 312.167969 C 655.304688 311.800781 655.8125 311.378906 656.285156 310.910156 C 656.753906 310.4375 657.175781 309.929688 657.542969 309.375 C 657.914062 308.824219 658.226562 308.238281 658.480469 307.625 C 658.734375 307.011719 658.925781 306.378906 659.054688 305.726562 C 659.183594 305.074219 659.25 304.414062 659.25 303.75 L 659.25 293.625 L 780.75 293.625 L 780.75 303.75 C 780.75 304.414062 780.816406 305.074219 780.945312 305.726562 C 781.074219 306.378906 781.265625 307.011719 781.519531 307.625 C 781.773438 308.238281 782.085938 308.824219 782.457031 309.375 C 782.824219 309.929688 783.246094 310.4375 783.714844 310.910156 C 784.1875 311.378906 784.695312 311.800781 785.25 312.167969 C 785.800781 312.539062 786.386719 312.851562 787 313.105469 C 787.613281 313.359375 788.246094 313.550781 788.898438 313.679688 C 789.550781 313.808594 790.210938 313.875 790.875 313.875 C 791.539062 313.875 792.199219 313.808594 792.851562 313.679688 C 793.503906 313.550781 794.136719 313.359375 794.75 313.105469 C 795.363281 312.851562 795.949219 312.539062 796.5 312.167969 C 797.054688 311.800781 797.5625 311.378906 798.035156 310.910156 C 798.503906 310.4375 798.925781 309.929688 799.292969 309.375 C 799.664062 308.824219 799.976562 308.238281 800.230469 307.625 C 800.484375 307.011719 800.675781 306.378906 800.804688 305.726562 C 800.933594 305.074219 801 304.414062 801 303.75 L 801 293.625 L 851.625 293.625 Z M 851.625 344.25 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;path style=&quot;&quot; d=&quot;M 704.40625 496.125 C 705.792969 496.105469 707.117188 495.816406 708.386719 495.253906 C 709.652344 494.691406 710.753906 493.902344 711.699219 492.886719 L 777.914062 422.011719 C 778.316406 421.515625 778.667969 420.988281 778.96875 420.429688 C 779.269531 419.871094 779.515625 419.289062 779.707031 418.679688 C 779.898438 418.074219 780.03125 417.457031 780.105469 416.824219 C 780.179688 416.195312 780.195312 415.5625 780.152344 414.925781 C 780.105469 414.292969 780.003906 413.667969 779.839844 413.054688 C 779.679688 412.441406 779.460938 411.84375 779.1875 411.273438 C 778.914062 410.699219 778.589844 410.15625 778.214844 409.644531 C 777.835938 409.128906 777.417969 408.65625 776.953125 408.222656 C 776.488281 407.789062 775.984375 407.40625 775.449219 407.066406 C 774.910156 406.726562 774.34375 406.441406 773.753906 406.210938 C 773.160156 405.976562 772.554688 405.800781 771.929688 405.683594 C 771.304688 405.566406 770.675781 405.507812 770.039062 405.507812 C 769.402344 405.507812 768.773438 405.570312 768.148438 405.6875 C 767.523438 405.808594 766.917969 405.984375 766.328125 406.21875 C 765.734375 406.453125 765.171875 406.738281 764.632812 407.078125 C 764.097656 407.417969 763.597656 407.804688 763.132812 408.238281 L 704.105469 471.421875 L 681.625 448.539062 C 681.175781 448.003906 680.675781 447.523438 680.125 447.09375 C 679.578125 446.664062 678.988281 446.296875 678.363281 445.988281 C 677.738281 445.679688 677.085938 445.4375 676.410156 445.265625 C 675.734375 445.089844 675.050781 444.988281 674.351562 444.957031 C 673.65625 444.925781 672.960938 444.964844 672.273438 445.078125 C 671.585938 445.1875 670.914062 445.367188 670.265625 445.617188 C 669.613281 445.867188 668.992188 446.183594 668.40625 446.558594 C 667.820312 446.9375 667.28125 447.371094 666.78125 447.859375 C 666.285156 448.351562 665.84375 448.886719 665.457031 449.46875 C 665.074219 450.046875 664.75 450.664062 664.492188 451.308594 C 664.230469 451.957031 664.042969 452.625 663.921875 453.3125 C 663.800781 454 663.75 454.691406 663.769531 455.386719 C 663.792969 456.085938 663.886719 456.773438 664.050781 457.453125 C 664.214844 458.128906 664.445312 458.785156 664.746094 459.414062 C 665.042969 460.042969 665.40625 460.636719 665.828125 461.191406 C 666.25 461.75 666.722656 462.253906 667.25 462.710938 L 697.625 493.085938 C 698.519531 494.003906 699.554688 494.726562 700.726562 495.25 C 701.898438 495.777344 703.125 496.066406 704.40625 496.125 Z M 704.40625 496.125 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/svg&gt;" />
              <option name="updatedContent" value="&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; shape-rendering=&quot;geometricPrecision&quot; text-rendering=&quot;geometricPrecision&quot; image-rendering=&quot;optimizeQuality&quot; fill=&quot;currentColor&quot; fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; zoomAndPan=&quot;magnify&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; version=&quot;1.2&quot; viewBox=&quot;568.13 243 303.75 324&quot;&gt;&lt;defs&gt;&lt;clipPath id=&quot;19803a20b5&quot;&gt;&lt;path d=&quot;M 568.125 384 L 871.875 384 L 871.875 567 L 568.125 567 Z M 568.125 384 &quot;&gt;&lt;/path&gt;&lt;/clipPath&gt;&lt;clipPath id=&quot;47458055ab&quot;&gt;&lt;path d=&quot;M 568.125 243 L 871.875 243 L 871.875 365 L 568.125 365 Z M 568.125 243 &quot;&gt;&lt;/path&gt;&lt;/clipPath&gt;&lt;/defs&gt;&lt;g id=&quot;f8c13798bc&quot;&gt;&lt;g clip-rule=&quot;nonzero&quot; clip-path=&quot;url(#19803a20b5)&quot;&gt;&lt;path d=&quot;M 851.625 536.625 C 851.625 537.289062 851.558594 537.949219 851.429688 538.601562 C 851.300781 539.253906 851.109375 539.886719 850.855469 540.5 C 850.601562 541.113281 850.289062 541.699219 849.917969 542.25 C 849.550781 542.804688 849.128906 543.3125 848.660156 543.785156 C 848.1875 544.253906 847.679688 544.675781 847.125 545.042969 C 846.574219 545.414062 845.988281 545.726562 845.375 545.980469 C 844.761719 546.234375 844.128906 546.425781 843.476562 546.554688 C 842.824219 546.683594 842.164062 546.75 841.5 546.75 L 598.5 546.75 C 597.835938 546.75 597.175781 546.683594 596.523438 546.554688 C 595.871094 546.425781 595.238281 546.234375 594.625 545.980469 C 594.011719 545.726562 593.425781 545.414062 592.875 545.042969 C 592.320312 544.675781 591.8125 544.253906 591.339844 543.785156 C 590.871094 543.3125 590.449219 542.804688 590.082031 542.25 C 589.710938 541.699219 589.398438 541.113281 589.144531 540.5 C 588.890625 539.886719 588.699219 539.253906 588.570312 538.601562 C 588.441406 537.949219 588.375 537.289062 588.375 536.625 L 588.375 384.75 L 568.125 384.75 L 568.125 536.625 C 568.125 537.621094 568.171875 538.613281 568.269531 539.601562 C 568.367188 540.59375 568.515625 541.574219 568.707031 542.550781 C 568.902344 543.527344 569.144531 544.492188 569.433594 545.441406 C 569.722656 546.394531 570.054688 547.328125 570.4375 548.25 C 570.816406 549.167969 571.242188 550.066406 571.710938 550.945312 C 572.179688 551.820312 572.691406 552.671875 573.242188 553.5 C 573.796875 554.328125 574.390625 555.125 575.019531 555.894531 C 575.652344 556.664062 576.316406 557.398438 577.023438 558.101562 C 577.726562 558.808594 578.460938 559.472656 579.230469 560.105469 C 580 560.734375 580.796875 561.328125 581.625 561.882812 C 582.453125 562.433594 583.304688 562.945312 584.179688 563.414062 C 585.058594 563.882812 585.957031 564.308594 586.875 564.6875 C 587.796875 565.070312 588.730469 565.402344 589.683594 565.691406 C 590.632812 565.980469 591.597656 566.222656 592.574219 566.417969 C 593.550781 566.609375 594.53125 566.757812 595.523438 566.855469 C 596.511719 566.953125 597.503906 567 598.5 567 L 841.5 567 C 842.496094 567 843.488281 566.953125 844.476562 566.855469 C 845.46875 566.757812 846.449219 566.609375 847.425781 566.417969 C 848.402344 566.222656 849.367188 565.980469 850.316406 565.691406 C 851.269531 565.402344 852.203125 565.070312 853.125 564.6875 C 854.042969 564.308594 854.941406 563.882812 855.820312 563.414062 C 856.695312 562.945312 857.546875 562.433594 858.375 561.882812 C 859.203125 561.328125 860 560.734375 860.769531 560.105469 C 861.539062 559.472656 862.273438 558.808594 862.976562 558.101562 C 863.683594 557.398438 864.347656 556.664062 864.980469 555.894531 C 865.609375 555.125 866.203125 554.328125 866.753906 553.5 C 867.308594 552.671875 867.820312 551.820312 868.289062 550.945312 C 868.757812 550.066406 869.183594 549.167969 869.5625 548.25 C 869.945312 547.328125 870.277344 546.394531 870.566406 545.441406 C 870.855469 544.492188 871.097656 543.527344 871.292969 542.550781 C 871.484375 541.574219 871.632812 540.59375 871.730469 539.601562 C 871.828125 538.613281 871.875 537.621094 871.875 536.625 L 871.875 384.75 L 851.625 384.75 Z M 851.625 536.625 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g clip-rule=&quot;nonzero&quot; clip-path=&quot;url(#47458055ab)&quot;&gt;&lt;path d=&quot;M 861.75 273.375 L 801 273.375 L 801 253.125 C 801 252.460938 800.933594 251.800781 800.804688 251.148438 C 800.675781 250.496094 800.484375 249.863281 800.230469 249.25 C 799.976562 248.636719 799.664062 248.050781 799.292969 247.5 C 798.925781 246.945312 798.503906 246.4375 798.035156 245.964844 C 797.5625 245.496094 797.054688 245.074219 796.5 244.707031 C 795.949219 244.335938 795.363281 244.023438 794.75 243.769531 C 794.136719 243.515625 793.503906 243.324219 792.851562 243.195312 C 792.199219 243.066406 791.539062 243 790.875 243 C 790.210938 243 789.550781 243.066406 788.898438 243.195312 C 788.246094 243.324219 787.613281 243.515625 787 243.769531 C 786.386719 244.023438 785.800781 244.335938 785.25 244.707031 C 784.695312 245.074219 784.1875 245.496094 783.714844 245.964844 C 783.246094 246.4375 782.824219 246.945312 782.457031 247.5 C 782.085938 248.050781 781.773438 248.636719 781.519531 249.25 C 781.265625 249.863281 781.074219 250.496094 780.945312 251.148438 C 780.816406 251.800781 780.75 252.460938 780.75 253.125 L 780.75 273.375 L 659.25 273.375 L 659.25 253.125 C 659.25 252.460938 659.183594 251.800781 659.054688 251.148438 C 658.925781 250.496094 658.734375 249.863281 658.480469 249.25 C 658.226562 248.636719 657.914062 248.050781 657.542969 247.5 C 657.175781 246.945312 656.753906 246.4375 656.285156 245.964844 C 655.8125 245.496094 655.304688 245.074219 654.75 244.707031 C 654.199219 244.335938 653.613281 244.023438 653 243.769531 C 652.386719 243.515625 651.753906 243.324219 651.101562 243.195312 C 650.449219 243.066406 649.789062 243 649.125 243 C 648.460938 243 647.800781 243.066406 647.148438 243.195312 C 646.496094 243.324219 645.863281 243.515625 645.25 243.769531 C 644.636719 244.023438 644.050781 244.335938 643.5 244.707031 C 642.945312 245.074219 642.4375 245.496094 641.964844 245.964844 C 641.496094 246.4375 641.074219 246.945312 640.707031 247.5 C 640.335938 248.050781 640.023438 248.636719 639.769531 249.25 C 639.515625 249.863281 639.324219 250.496094 639.195312 251.148438 C 639.066406 251.800781 639 252.460938 639 253.125 L 639 273.375 L 578.25 273.375 C 577.585938 273.375 576.925781 273.441406 576.273438 273.570312 C 575.621094 273.699219 574.988281 273.890625 574.375 274.144531 C 573.761719 274.398438 573.175781 274.710938 572.625 275.082031 C 572.070312 275.449219 571.5625 275.871094 571.089844 276.339844 C 570.621094 276.8125 570.199219 277.320312 569.832031 277.875 C 569.460938 278.425781 569.148438 279.011719 568.894531 279.625 C 568.640625 280.238281 568.449219 280.871094 568.320312 281.523438 C 568.191406 282.175781 568.125 282.835938 568.125 283.5 L 568.125 354.375 C 568.125 355.039062 568.191406 355.699219 568.320312 356.351562 C 568.449219 357.003906 568.640625 357.636719 568.894531 358.25 C 569.148438 358.863281 569.460938 359.449219 569.832031 360 C 570.199219 360.554688 570.621094 361.0625 571.089844 361.535156 C 571.5625 362.003906 572.070312 362.425781 572.625 362.792969 C 573.175781 363.164062 573.761719 363.476562 574.375 363.730469 C 574.988281 363.984375 575.621094 364.175781 576.273438 364.304688 C 576.925781 364.433594 577.585938 364.5 578.25 364.5 L 861.75 364.5 C 862.414062 364.5 863.074219 364.433594 863.726562 364.304688 C 864.378906 364.175781 865.011719 363.984375 865.625 363.730469 C 866.238281 363.476562 866.824219 363.164062 867.375 362.792969 C 867.929688 362.425781 868.4375 362.003906 868.910156 361.535156 C 869.378906 361.0625 869.800781 360.554688 870.167969 360 C 870.539062 359.449219 870.851562 358.863281 871.105469 358.25 C 871.359375 357.636719 871.550781 357.003906 871.679688 356.351562 C 871.808594 355.699219 871.875 355.039062 871.875 354.375 L 871.875 283.5 C 871.875 282.835938 871.808594 282.175781 871.679688 281.523438 C 871.550781 280.871094 871.359375 280.238281 871.105469 279.625 C 870.851562 279.011719 870.539062 278.425781 870.167969 277.875 C 869.800781 277.320312 869.378906 276.8125 868.910156 276.339844 C 868.4375 275.871094 867.929688 275.449219 867.375 275.082031 C 866.824219 274.710938 866.238281 274.398438 865.625 274.144531 C 865.011719 273.890625 864.378906 273.699219 863.726562 273.570312 C 863.074219 273.441406 862.414062 273.375 861.75 273.375 Z M 851.625 344.25 L 588.375 344.25 L 588.375 293.625 L 639 293.625 L 639 303.75 C 639 304.414062 639.066406 305.074219 639.195312 305.726562 C 639.324219 306.378906 639.515625 307.011719 639.769531 307.625 C 640.023438 308.238281 640.335938 308.824219 640.707031 309.375 C 641.074219 309.929688 641.496094 310.4375 641.964844 310.910156 C 642.4375 311.378906 642.945312 311.800781 643.5 312.167969 C 644.050781 312.539062 644.636719 312.851562 645.25 313.105469 C 645.863281 313.359375 646.496094 313.550781 647.148438 313.679688 C 647.800781 313.808594 648.460938 313.875 649.125 313.875 C 649.789062 313.875 650.449219 313.808594 651.101562 313.679688 C 651.753906 313.550781 652.386719 313.359375 653 313.105469 C 653.613281 312.851562 654.199219 312.539062 654.75 312.167969 C 655.304688 311.800781 655.8125 311.378906 656.285156 310.910156 C 656.753906 310.4375 657.175781 309.929688 657.542969 309.375 C 657.914062 308.824219 658.226562 308.238281 658.480469 307.625 C 658.734375 307.011719 658.925781 306.378906 659.054688 305.726562 C 659.183594 305.074219 659.25 304.414062 659.25 303.75 L 659.25 293.625 L 780.75 293.625 L 780.75 303.75 C 780.75 304.414062 780.816406 305.074219 780.945312 305.726562 C 781.074219 306.378906 781.265625 307.011719 781.519531 307.625 C 781.773438 308.238281 782.085938 308.824219 782.457031 309.375 C 782.824219 309.929688 783.246094 310.4375 783.714844 310.910156 C 784.1875 311.378906 784.695312 311.800781 785.25 312.167969 C 785.800781 312.539062 786.386719 312.851562 787 313.105469 C 787.613281 313.359375 788.246094 313.550781 788.898438 313.679688 C 789.550781 313.808594 790.210938 313.875 790.875 313.875 C 791.539062 313.875 792.199219 313.808594 792.851562 313.679688 C 793.503906 313.550781 794.136719 313.359375 794.75 313.105469 C 795.363281 312.851562 795.949219 312.539062 796.5 312.167969 C 797.054688 311.800781 797.5625 311.378906 798.035156 310.910156 C 798.503906 310.4375 798.925781 309.929688 799.292969 309.375 C 799.664062 308.824219 799.976562 308.238281 800.230469 307.625 C 800.484375 307.011719 800.675781 306.378906 800.804688 305.726562 C 800.933594 305.074219 801 304.414062 801 303.75 L 801 293.625 L 851.625 293.625 Z M 851.625 344.25 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;path d=&quot;M 704.40625 496.125 C 705.792969 496.105469 707.117188 495.816406 708.386719 495.253906 C 709.652344 494.691406 710.753906 493.902344 711.699219 492.886719 L 777.914062 422.011719 C 778.316406 421.515625 778.667969 420.988281 778.96875 420.429688 C 779.269531 419.871094 779.515625 419.289062 779.707031 418.679688 C 779.898438 418.074219 780.03125 417.457031 780.105469 416.824219 C 780.179688 416.195312 780.195312 415.5625 780.152344 414.925781 C 780.105469 414.292969 780.003906 413.667969 779.839844 413.054688 C 779.679688 412.441406 779.460938 411.84375 779.1875 411.273438 C 778.914062 410.699219 778.589844 410.15625 778.214844 409.644531 C 777.835938 409.128906 777.417969 408.65625 776.953125 408.222656 C 776.488281 407.789062 775.984375 407.40625 775.449219 407.066406 C 774.910156 406.726562 774.34375 406.441406 773.753906 406.210938 C 773.160156 405.976562 772.554688 405.800781 771.929688 405.683594 C 771.304688 405.566406 770.675781 405.507812 770.039062 405.507812 C 769.402344 405.507812 768.773438 405.570312 768.148438 405.6875 C 767.523438 405.808594 766.917969 405.984375 766.328125 406.21875 C 765.734375 406.453125 765.171875 406.738281 764.632812 407.078125 C 764.097656 407.417969 763.597656 407.804688 763.132812 408.238281 L 704.105469 471.421875 L 681.625 448.539062 C 681.175781 448.003906 680.675781 447.523438 680.125 447.09375 C 679.578125 446.664062 678.988281 446.296875 678.363281 445.988281 C 677.738281 445.679688 677.085938 445.4375 676.410156 445.265625 C 675.734375 445.089844 675.050781 444.988281 674.351562 444.957031 C 673.65625 444.925781 672.960938 444.964844 672.273438 445.078125 C 671.585938 445.1875 670.914062 445.367188 670.265625 445.617188 C 669.613281 445.867188 668.992188 446.183594 668.40625 446.558594 C 667.820312 446.9375 667.28125 447.371094 666.78125 447.859375 C 666.285156 448.351562 665.84375 448.886719 665.457031 449.46875 C 665.074219 450.046875 664.75 450.664062 664.492188 451.308594 C 664.230469 451.957031 664.042969 452.625 663.921875 453.3125 C 663.800781 454 663.75 454.691406 663.769531 455.386719 C 663.792969 456.085938 663.886719 456.773438 664.050781 457.453125 C 664.214844 458.128906 664.445312 458.785156 664.746094 459.414062 C 665.042969 460.042969 665.40625 460.636719 665.828125 461.191406 C 666.25 461.75 666.722656 462.253906 667.25 462.710938 L 697.625 493.085938 C 698.519531 494.003906 699.554688 494.726562 700.726562 495.25 C 701.898438 495.777344 703.125 496.066406 704.40625 496.125 Z M 704.40625 496.125 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/svg&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/pages/Task.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/pages/Task.jsx" />
              <option name="originalContent" value="import React, { useState, useEffect } from &quot;react&quot;;&#10;import { motion } from &quot;framer-motion&quot;;&#10;import { useParams, useNavigate } from &quot;react-router-dom&quot;;&#10;import Header from &quot;../componenets/Header.jsx&quot;;&#10;import { Search, ViewList, ViewModule, Edit } from &quot;@mui/icons-material&quot;;&#10;import EditTaskModal from &quot;../componenets/EditTaskModal.jsx&quot;;&#10;import LoadingSpinner from &quot;../componenets/LoadingSpinner.jsx&quot;;&#10;import FetchDataFail from &quot;../componenets/FetchDataFail.jsx&quot;;&#10;import PermissionGate from &quot;../componenets/PermissionGate&quot;;&#10;import ProcessLog from &quot;../componenets/ProcessLog&quot;;&#10;import LogButton from &quot;../componenets/LogButton.jsx&quot;;&#10;import {&#10;  TaskIcon,&#10;  PendingIcon,&#10;  ActiveIcon,&#10;  CompletedIcon,&#10;  ItemIcon,&#10;  SubTaskIcon,&#10;} from &quot;../componenets/CustomIcons.jsx&quot;;&#10;import { iconMap } from &quot;../componenets/CustomIcons.jsx&quot;;&#10;import AddButton from &quot;../componenets/AddButton.jsx&quot;;&#10;import EditSubTaskModal from &quot;../componenets/EditSubTaskModal.jsx&quot;;&#10;import TaskItemsModal from &quot;../componenets/TaskItemsModal.jsx&quot;;&#10;import api from &quot;../services/api.js&quot;;&#10;import { backgroundVariants } from &quot;../utils/styles.js&quot;;&#10;&#10;const Task = () =&gt; {&#10;  const { taskId } = useParams();&#10;  const navigate = useNavigate();&#10;  const [subTasks, setSubTasks] = useState([]);&#10;  const [taskInfo, setTaskInfo] = useState(null);&#10;  const [isLoading, setIsLoading] = useState(true);&#10;  const [error, setError] = useState(&quot;&quot;);&#10;  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);&#10;  const [selectedStatus, setSelectedStatus] = useState(&quot;all&quot;);&#10;  const [viewMode, setViewMode] = useState(&quot;grid&quot;);&#10;  const [showEditModal, setShowEditModal] = useState(false);&#10;  const [showLogModal, setShowLogModal] = useState(false);&#10;  const [showAddModal, setShowAddModal] = useState(false);&#10;  const [showItemsModal, setShowItemsModal] = useState(false);&#10;&#10;  const [stats, setStats] = useState({&#10;    totalSubTasks: 0,&#10;    activeSubTasks: 0,&#10;    completedSubTasks: 0,&#10;    pendingSubTasks: 0,&#10;  });&#10;&#10;  // Animation variants&#10;  const pageVariants = {&#10;    initial: { opacity: 0 },&#10;    in: { opacity: 1 },&#10;    out: { opacity: 0 },&#10;  };&#10;&#10;  const pageTransition = {&#10;    type: &quot;tween&quot;,&#10;    ease: &quot;easeInOut&quot;,&#10;    duration: 0.3,&#10;  };&#10;&#10;  const cardVariants = {&#10;    hidden: { opacity: 0, y: 20 },&#10;    visible: { opacity: 1, y: 0 },&#10;  };&#10;&#10;  useEffect(() =&gt; {&#10;    fetchTaskSubTasks();&#10;    fetchTaskInfo();&#10;  }, [taskId]);&#10;&#10;  const fetchTaskSubTasks = async () =&gt; {&#10;    try {&#10;      setIsLoading(true);&#10;      setError(&quot;&quot;);&#10;&#10;      const response = await api.getSubtasksByTaskId(taskId);&#10;&#10;      if (response.ok) {&#10;        const subTasksData = await response.json();&#10;        console.log(&quot;SubTasks Data:&quot;, subTasksData);&#10;&#10;        // Ensure subTasksData is always an array&#10;        const subTasks = Array.isArray(subTasksData) ? subTasksData : [];&#10;        setSubTasks(subTasks);&#10;&#10;        // Calculate stats&#10;        const totalSubTasks = subTasks.length;&#10;        const activeSubTasks = subTasks.filter(&#10;          (subTask) =&gt; subTask.state?.state_name === &quot;active&quot;,&#10;        ).length;&#10;        const completedSubTasks = subTasks.filter(&#10;          (subTask) =&gt; subTask.state?.state_name === &quot;completed&quot;,&#10;        ).length;&#10;        const pendingSubTasks = subTasks.filter(&#10;          (subTask) =&gt; subTask.state?.state_name === &quot;pending&quot;,&#10;        ).length;&#10;&#10;        setStats({&#10;          totalSubTasks,&#10;          activeSubTasks,&#10;          completedSubTasks,&#10;          pendingSubTasks,&#10;        });&#10;      } else {&#10;        setError(response.status);&#10;      }&#10;    } catch (err) {&#10;      setError(err.message);&#10;      console.error(&quot;Error fetching subtasks:&quot;, err);&#10;    } finally {&#10;      setIsLoading(false);&#10;    }&#10;  };&#10;&#10;  const fetchTaskInfo = async () =&gt; {&#10;    try {&#10;      const response = await api.getTask(taskId);&#10;      if (response.ok) {&#10;        const taskData = await response.json();&#10;        console.log(&quot;Task Data:&quot;, taskData);&#10;        setTaskInfo(taskData);&#10;      }&#10;    } catch (err) {&#10;      console.error(&quot;Error fetching task info:&quot;, err);&#10;    }&#10;  };&#10;&#10;  const formatDate = (dateString) =&gt; {&#10;    if (!dateString) return &quot;N/A&quot;;&#10;    return new Date(dateString).toLocaleDateString(&quot;zh-hk&quot;, {&#10;      year: &quot;numeric&quot;,&#10;      month: &quot;2-digit&quot;,&#10;      day: &quot;2-digit&quot;,&#10;    });&#10;  };&#10;&#10;  // Filter subtasks based on search term and status&#10;  const filteredSubTasks = subTasks.filter((subTask) =&gt; {&#10;    const matchesSearch =&#10;      subTask.id?.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||&#10;      subTask.task_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||&#10;      subTask.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||&#10;      (subTask.assignee?.name || &quot;&quot;)&#10;        .toLowerCase()&#10;        .includes(searchTerm.toLowerCase());&#10;&#10;    let matchesStatus = true;&#10;    if (selectedStatus !== &quot;all&quot;) {&#10;      matchesStatus = subTask.state?.state_name === selectedStatus;&#10;    }&#10;&#10;    return matchesSearch &amp;&amp; matchesStatus;&#10;  });&#10;&#10;  if (isLoading) {&#10;    return (&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.projects}&#10;      &gt;&#10;        &lt;Header title={`任務 #${taskId}`} /&gt;&#10;        &lt;div className=&quot;flex h-64 items-center justify-center&quot;&gt;&#10;          &lt;LoadingSpinner variant=&quot;circular&quot; size={30} message=&quot;載入中...&quot; /&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;    );&#10;  }&#10;&#10;  if (error) {&#10;    return (&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.projects}&#10;      &gt;&#10;        &lt;Header title={`任務 #${taskId}`} /&gt;&#10;        &lt;FetchDataFail&#10;          error={error}&#10;          onRetry={fetchTaskSubTasks}&#10;          className=&quot;h-64&quot;&#10;        /&gt;&#10;      &lt;/motion.div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;PermissionGate resource=&quot;task&quot; action=&quot;read&quot; header={`任務 #${taskId}`}&gt;&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.projects}&#10;      &gt;&#10;        &lt;Header title={`任務 #${taskId}`} /&gt;&#10;&#10;        &lt;div className=&quot;px-6 py-8&quot;&gt;&#10;          &lt;div className=&quot;mx-auto max-w-6xl&quot;&gt;&#10;            {/* Task Info Card - Complete Information */}&#10;            {taskInfo &amp;&amp; (&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism mb-8 rounded-2xl border border-gray-100 p-6 shadow-lg&quot;&#10;                initial={{ opacity: 0, y: 20 }}&#10;                animate={{ opacity: 1, y: 0 }}&#10;                transition={{ delay: 0.2, duration: 0.3 }}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-start gap-4&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-purple-100&quot;&gt;&#10;                    &lt;TaskIcon className=&quot;h-6 w-6 text-purple-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex-1&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                      {taskInfo.task_name || `任務 #${taskId}`}&#10;                    &lt;/h3&gt;&#10;                    &lt;p className=&quot;text-gray-600&quot;&gt;&#10;                      {taskInfo.description || &quot;無描述&quot;}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;mt-6 grid grid-cols-1 gap-4 border-t border-gray-200 pt-4 md:grid-cols-2 lg:grid-cols-4&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      任務ID&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      #{taskInfo.id}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      所屬工單&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {taskInfo?.work_order?.name || &quot;未設定&quot;} (&#10;                      {taskInfo?.work_order?.id || &quot;未設定&quot;})&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      指派給&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {taskInfo.assignee?.name || &quot;未指派&quot;}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      狀態&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      &lt;span&#10;                        className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium`}&#10;                        style={{&#10;                          backgroundColor: taskInfo.state?.bg_color,&#10;                          color: taskInfo.state?.text_color,&#10;                        }}&#10;                      &gt;&#10;                        {iconMap[taskInfo.state?.icon] &amp;&amp;&#10;                          React.createElement(iconMap[taskInfo.state.icon], {&#10;                            className: &quot;h-4 w-4&quot;,&#10;                          })}&#10;                        &amp;nbsp;&#10;                        {taskInfo.state?.state_name}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      預估工時&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {taskInfo.estimated_hour&#10;                        ? `${taskInfo.estimated_hour}h`&#10;                        : &quot;未設定&quot;}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      開始日期&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {formatDate(taskInfo.start_date)}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      截止日期&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {formatDate(taskInfo.due_date)}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      創建時間&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {formatDate(taskInfo.created_at)}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className={`flex justify-between`}&gt;&#10;                    &lt;LogButton setShowLogModal={setShowLogModal} /&gt;&#10;                    &lt;PermissionGate resource=&quot;task&quot; action=&quot;write&quot; show={false}&gt;&#10;                      &lt;button&#10;                        onClick={() =&gt; setShowItemsModal(true)}&#10;                        className=&quot;glassmorphism flex items-center gap-2 rounded-xl border border-gray-100 px-4 py-2 text-gray-600 shadow-sm transition-colors duration-200 hover:bg-gray-50&quot;&#10;                      &gt;&#10;                        &lt;ItemIcon className=&quot;h-4 w-4&quot; /&gt;&#10;                        物件管理&#10;                      &lt;/button&gt;&#10;                      &lt;button&#10;                        onClick={() =&gt; setShowEditModal(true)}&#10;                        className=&quot;glassmorphism flex items-center gap-2 rounded-xl border border-gray-100 px-4 py-2 text-gray-600 shadow-sm transition-colors duration-200 hover:bg-gray-50&quot;&#10;                      &gt;&#10;                        &lt;Edit className=&quot;h-4 w-4&quot; /&gt;&#10;                        編輯&#10;                      &lt;/button&gt;&#10;                    &lt;/PermissionGate&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;            )}&#10;&#10;            {/* Statistics Cards */}&#10;            &lt;motion.div&#10;              className=&quot;mb-8 grid grid-cols-2 gap-4 md:grid-cols-4&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.3, duration: 0.3 }}&#10;            &gt;&#10;              &lt;motion.div&#10;                className={`glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-6 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl ${selectedStatus === &quot;all&quot; ? &quot;ring-2 ring-blue-500&quot; : &quot;&quot;}`}&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.1 }}&#10;                onClick={() =&gt; setSelectedStatus(&quot;all&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-blue-100&quot;&gt;&#10;                    &lt;TaskIcon className=&quot;text-blue h-6 w-6&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;總子任務&lt;/p&gt;&#10;                    &lt;p className=&quot;text-2xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.totalSubTasks}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className={`glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-6 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl ${selectedStatus === &quot;active&quot; ? &quot;ring-2 ring-green-500&quot; : &quot;&quot;}`}&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.2 }}&#10;                onClick={() =&gt; setSelectedStatus(&quot;active&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-green-100&quot;&gt;&#10;                    &lt;ActiveIcon className=&quot;h-6 w-6 text-green-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;進行中&lt;/p&gt;&#10;                    &lt;p className=&quot;text-2xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.activeSubTasks}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className={`glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-6 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl ${selectedStatus === &quot;pending&quot; ? &quot;ring-2 ring-yellow-500&quot; : &quot;&quot;}`}&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.3 }}&#10;                onClick={() =&gt; setSelectedStatus(&quot;pending&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-yellow-100&quot;&gt;&#10;                    &lt;PendingIcon className=&quot;h-6 w-6 text-yellow-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;待開始&lt;/p&gt;&#10;                    &lt;p className=&quot;text-2xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.pendingSubTasks}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className={`glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-6 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl ${selectedStatus === &quot;completed&quot; ? &quot;ring-2 ring-red-500&quot; : &quot;&quot;}`}&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.4 }}&#10;                onClick={() =&gt; setSelectedStatus(&quot;completed&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-red-100&quot;&gt;&#10;                    &lt;CompletedIcon className=&quot;h-6 w-6 text-red-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;已完成&lt;/p&gt;&#10;                    &lt;p className=&quot;text-2xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.completedSubTasks}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* Search and Filter */}&#10;            &lt;motion.div&#10;              className=&quot;mb-6 flex flex-col gap-4 md:flex-row md:items-center md:justify-between&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.4, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;relative max-w-md flex-1&quot;&gt;&#10;                &lt;Search className=&quot;absolute top-1/2 left-3 z-10 h-5 w-5 -translate-y-1/2 text-gray-400&quot; /&gt;&#10;                &lt;input&#10;                  type=&quot;text&quot;&#10;                  placeholder=&quot;搜索子任務 ID、名稱或描述...&quot;&#10;                  className=&quot;glassmorphism w-full rounded-xl border border-gray-300 py-3 pr-4 pl-10 transition-all duration-200 focus:border-transparent focus:ring-2 focus:ring-blue-500&quot;&#10;                  value={searchTerm}&#10;                  onChange={(e) =&gt; setSearchTerm(e.target.value)}&#10;                /&gt;&#10;              &lt;/div&gt;&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* SubTasks List/Grid */}&#10;            &lt;motion.div&#10;              className=&quot;glassmorphism overflow-hidden rounded-2xl border border-gray-100 shadow-lg&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.5, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center justify-between border-b border-gray-200 bg-gray-50 px-6 py-4&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                  子任務清單 ({filteredSubTasks.length})&#10;                &lt;/h3&gt;&#10;                &lt;button&#10;                  onClick={() =&gt;&#10;                    setViewMode(viewMode === &quot;list&quot; ? &quot;grid&quot; : &quot;list&quot;)&#10;                  }&#10;                  className=&quot;glassmorphism flex w-fit items-center gap-2 rounded-xl border border-gray-100 px-4 py-2 text-gray-600 shadow-sm transition-colors duration-200 hover:bg-gray-50&quot;&#10;                &gt;&#10;                  {viewMode === &quot;list&quot; ? (&#10;                    &lt;ViewModule className=&quot;h-5 w-5&quot; /&gt;&#10;                  ) : (&#10;                    &lt;ViewList className=&quot;h-5 w-5&quot; /&gt;&#10;                  )}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;&#10;              {filteredSubTasks.length === 0 ? (&#10;                &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;                  &lt;TaskIcon className=&quot;mx-auto h-12 w-12 text-gray-400&quot; /&gt;&#10;                  &lt;p className=&quot;mt-2 text-gray-500&quot;&gt;&#10;                    {searchTerm || selectedStatus !== &quot;all&quot;&#10;                      ? &quot;沒有符合條件的子任務&quot;&#10;                      : &quot;暫無子任務資料&quot;}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              ) : viewMode === &quot;list&quot; ? (&#10;                &lt;div className=&quot;overflow-x-auto&quot;&gt;&#10;                  &lt;table className=&quot;w-full&quot;&gt;&#10;                    &lt;thead className=&quot;bg-gray-50&quot;&gt;&#10;                      &lt;tr&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          子任務 ID&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;min-w-[140px] px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase&quot;&gt;&#10;                          子任務名稱&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          指派給&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          描述&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          狀態&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;min-w-[100px] px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          預估工時&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;min-w-[100px] px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          開始日期&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;min-w-[100px] px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          截止日期&#10;                        &lt;/th&gt;&#10;                      &lt;/tr&gt;&#10;                    &lt;/thead&gt;&#10;                    &lt;tbody className=&quot;glassmorphism divide-y divide-gray-200&quot;&gt;&#10;                      {filteredSubTasks.map((subTask, index) =&gt; (&#10;                        &lt;motion.tr&#10;                          key={subTask.id}&#10;                          className=&quot;cursor-pointer hover:bg-gray-50&quot;&#10;                          initial={{ opacity: 0, x: -20 }}&#10;                          animate={{ opacity: 1, x: 0 }}&#10;                          transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                          onClick={() =&gt; navigate(`/subtask/${subTask.id}`)}&#10;                        &gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center&quot;&gt;&#10;                              &lt;div className=&quot;flex h-8 w-8 items-center justify-center rounded-full bg-purple-100&quot;&gt;&#10;                                &lt;SubTaskIcon className=&quot;text-purple h-4 w-4&quot; /&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;ml-3&quot;&gt;&#10;                                &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                                  {subTask.id}&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm font-medium whitespace-nowrap text-gray-900&quot;&gt;&#10;                            {subTask.subtask_name}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm whitespace-nowrap text-gray-500&quot;&gt;&#10;                            {subTask.assignee?.name || &quot;未指派&quot;}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;max-w-xs truncate px-6 py-4 text-sm text-gray-500&quot;&gt;&#10;                            {subTask.description || &quot;無描述&quot;}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;span&#10;                              className={`inline-flex items-center gap-1 rounded-full px-2 py-1 text-xs font-semibold`}&#10;                              style={{&#10;                                backgroundColor: subTask.state?.bg_color,&#10;                                color: subTask.state?.text_color,&#10;                              }}&#10;                            &gt;&#10;                              {iconMap[subTask.state?.icon] &amp;&amp;&#10;                                React.createElement(&#10;                                  iconMap[subTask.state.icon],&#10;                                  {&#10;                                    className: &quot;h-4 w-4&quot;,&#10;                                  },&#10;                                )}&#10;                              &amp;nbsp;&#10;                              {subTask.state?.state_name}&#10;                            &lt;/span&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm whitespace-nowrap text-gray-500&quot;&gt;&#10;                            {subTask.estimated_hour&#10;                              ? `${subTask.estimated_hour}h`&#10;                              : &quot;N/A&quot;}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm whitespace-nowrap text-gray-500&quot;&gt;&#10;                            {formatDate(subTask.start_date)}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm whitespace-nowrap text-gray-500&quot;&gt;&#10;                            {formatDate(subTask.due_date)}&#10;                          &lt;/td&gt;&#10;                        &lt;/motion.tr&gt;&#10;                      ))}&#10;                    &lt;/tbody&gt;&#10;                  &lt;/table&gt;&#10;                &lt;/div&gt;&#10;              ) : (&#10;                &lt;div className=&quot;grid grid-cols-1 gap-4 p-6 md:grid-cols-2 lg:grid-cols-3&quot;&gt;&#10;                  {filteredSubTasks.map((subTask, index) =&gt; (&#10;                    &lt;motion.div&#10;                      key={subTask.id}&#10;                      className=&quot;cursor-pointer rounded-xl border border-gray-200 bg-gray-50 p-4 transition-shadow duration-200 hover:shadow-md&quot;&#10;                      initial={{ opacity: 0, scale: 0.9 }}&#10;                      animate={{ opacity: 1, scale: 1 }}&#10;                      transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                      onClick={() =&gt; navigate(`/subtask/${subTask.id}`)}&#10;                    &gt;&#10;                      &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                          &lt;span&#10;                            className={`inline-flex aspect-square h-10 w-10 items-center justify-center rounded-full text-xs font-semibold`}&#10;                            style={{&#10;                              backgroundColor: subTask.state?.bg_color,&#10;                              color: subTask.state?.text_color,&#10;                            }}&#10;                          &gt;&#10;                            {iconMap[subTask.state?.icon] &amp;&amp;&#10;                              React.createElement(iconMap[subTask.state.icon], {&#10;                                className: &quot;h-5 w-5&quot;,&#10;                              })}&#10;                          &lt;/span&gt;&#10;                          &lt;div&gt;&#10;                            &lt;h4 className=&quot;font-medium text-gray-900&quot;&gt;&#10;                              {subTask.subtask_name}&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-500&quot;&gt;&#10;                              #{subTask.id}&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;mt-4&quot;&gt;&#10;                        &lt;p className=&quot;line-clamp-2 text-sm text-gray-600&quot;&gt;&#10;                          {subTask.description || &quot;無描述&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;mt-4 grid grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                            {subTask.assignee?.name || &quot;未指派&quot;}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;指派給&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                            {subTask.estimated_hour&#10;                              ? `${subTask.estimated_hour}h`&#10;                              : &quot;未設定&quot;}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;預估工時&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;mt-4 grid grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                            {formatDate(subTask.start_date)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;開始日期&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                            {formatDate(subTask.due_date)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;截止日期&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/motion.div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/motion.div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;      &lt;ProcessLog&#10;        isOpen={showLogModal}&#10;        onClose={() =&gt; setShowLogModal(false)}&#10;        entityType=&quot;task&quot;&#10;        entityId={taskId}&#10;      /&gt;&#10;      &lt;EditTaskModal&#10;        isOpen={showEditModal}&#10;        onClose={() =&gt; setShowEditModal(false)}&#10;        task={taskInfo}&#10;        onSave={(updatedTask) =&gt; {&#10;          setTaskInfo(updatedTask);&#10;          fetchTaskSubTasks();&#10;          fetchTaskInfo();&#10;        }}&#10;        workOrderId={taskInfo?.work_order?.id}&#10;      /&gt;&#10;&#10;      &lt;EditSubTaskModal&#10;        isOpen={showAddModal}&#10;        onClose={() =&gt; setShowAddModal(false)}&#10;        taskId={taskId}&#10;        onSave={() =&gt; {&#10;          fetchTaskSubTasks();&#10;          fetchTaskInfo();&#10;        }}&#10;      /&gt;&#10;&#10;      &lt;TaskItemsModal&#10;        isOpen={showItemsModal}&#10;        onClose={() =&gt; setShowItemsModal(false)}&#10;        task={taskInfo}&#10;        onItemsUpdated={() =&gt; {&#10;          fetchTaskSubTasks();&#10;          fetchTaskInfo();&#10;        }}&#10;      /&gt;&#10;&#10;      &lt;PermissionGate resource=&quot;subtask&quot; action=&quot;create&quot; show={false}&gt;&#10;        &lt;AddButton action={() =&gt; setShowAddModal(true)} /&gt;&#10;      &lt;/PermissionGate&gt;&#10;    &lt;/PermissionGate&gt;&#10;  );&#10;};&#10;&#10;export default Task;&#10;" />
              <option name="updatedContent" value="import React, { useState, useEffect } from &quot;react&quot;;&#10;import { motion } from &quot;framer-motion&quot;;&#10;import { useParams, useNavigate } from &quot;react-router-dom&quot;;&#10;import Header from &quot;../componenets/Header.jsx&quot;;&#10;import { Search, ViewList, ViewModule, Edit } from &quot;@mui/icons-material&quot;;&#10;import EditTaskModal from &quot;../componenets/EditTaskModal.jsx&quot;;&#10;import LoadingSpinner from &quot;../componenets/LoadingSpinner.jsx&quot;;&#10;import FetchDataFail from &quot;../componenets/FetchDataFail.jsx&quot;;&#10;import PermissionGate from &quot;../componenets/PermissionGate&quot;;&#10;import ProcessLog from &quot;../componenets/ProcessLog&quot;;&#10;import LogButton from &quot;../componenets/LogButton.jsx&quot;;&#10;import {&#10;  TaskIcon,&#10;  PendingIcon,&#10;  ActiveIcon,&#10;  CompletedIcon,&#10;  ItemIcon,&#10;  SubTaskIcon,&#10;} from &quot;../componenets/CustomIcons.jsx&quot;;&#10;import { iconMap } from &quot;../componenets/CustomIcons.jsx&quot;;&#10;import AddButton from &quot;../componenets/AddButton.jsx&quot;;&#10;import EditSubTaskModal from &quot;../componenets/EditSubTaskModal.jsx&quot;;&#10;import TaskItemsModal from &quot;../componenets/TaskItemsModal.jsx&quot;;&#10;import api from &quot;../services/api.js&quot;;&#10;import { backgroundVariants } from &quot;../utils/styles.js&quot;;&#10;&#10;const Task = () =&gt; {&#10;  const { taskId } = useParams();&#10;  const navigate = useNavigate();&#10;  const [subTasks, setSubTasks] = useState([]);&#10;  const [taskInfo, setTaskInfo] = useState(null);&#10;  const [isLoading, setIsLoading] = useState(true);&#10;  const [error, setError] = useState(&quot;&quot;);&#10;  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);&#10;  const [selectedStatus, setSelectedStatus] = useState(&quot;all&quot;);&#10;  const [viewMode, setViewMode] = useState(&quot;grid&quot;);&#10;  const [showEditModal, setShowEditModal] = useState(false);&#10;  const [showLogModal, setShowLogModal] = useState(false);&#10;  const [showAddModal, setShowAddModal] = useState(false);&#10;  const [showItemsModal, setShowItemsModal] = useState(false);&#10;  const [items, setItems] = useState([]);&#10;  const [itemsLoading, setItemsLoading] = useState(false);&#10;&#10;  const [stats, setStats] = useState({&#10;    totalSubTasks: 0,&#10;    activeSubTasks: 0,&#10;    completedSubTasks: 0,&#10;    pendingSubTasks: 0,&#10;  });&#10;&#10;  // Animation variants&#10;  const pageVariants = {&#10;    initial: { opacity: 0 },&#10;    in: { opacity: 1 },&#10;    out: { opacity: 0 },&#10;  };&#10;&#10;  const pageTransition = {&#10;    type: &quot;tween&quot;,&#10;    ease: &quot;easeInOut&quot;,&#10;    duration: 0.3,&#10;  };&#10;&#10;  const cardVariants = {&#10;    hidden: { opacity: 0, y: 20 },&#10;    visible: { opacity: 1, y: 0 },&#10;  };&#10;&#10;  useEffect(() =&gt; {&#10;    fetchTaskSubTasks();&#10;    fetchTaskInfo();&#10;    fetchTaskItems();&#10;  }, [taskId]);&#10;&#10;  const fetchTaskSubTasks = async () =&gt; {&#10;    try {&#10;      setIsLoading(true);&#10;      setError(&quot;&quot;);&#10;&#10;      const response = await api.getSubtasksByTaskId(taskId);&#10;&#10;      if (response.ok) {&#10;        const subTasksData = await response.json();&#10;        console.log(&quot;SubTasks Data:&quot;, subTasksData);&#10;&#10;        // Ensure subTasksData is always an array&#10;        const subTasks = Array.isArray(subTasksData) ? subTasksData : [];&#10;        setSubTasks(subTasks);&#10;&#10;        // Calculate stats&#10;        const totalSubTasks = subTasks.length;&#10;        const activeSubTasks = subTasks.filter(&#10;          (subTask) =&gt; subTask.state?.state_name === &quot;active&quot;,&#10;        ).length;&#10;        const completedSubTasks = subTasks.filter(&#10;          (subTask) =&gt; subTask.state?.state_name === &quot;completed&quot;,&#10;        ).length;&#10;        const pendingSubTasks = subTasks.filter(&#10;          (subTask) =&gt; subTask.state?.state_name === &quot;pending&quot;,&#10;        ).length;&#10;&#10;        setStats({&#10;          totalSubTasks,&#10;          activeSubTasks,&#10;          completedSubTasks,&#10;          pendingSubTasks,&#10;        });&#10;      } else {&#10;        setError(response.status);&#10;      }&#10;    } catch (err) {&#10;      setError(err.message);&#10;      console.error(&quot;Error fetching subtasks:&quot;, err);&#10;    } finally {&#10;      setIsLoading(false);&#10;    }&#10;  };&#10;&#10;  const fetchTaskInfo = async () =&gt; {&#10;    try {&#10;      const response = await api.getTask(taskId);&#10;      if (response.ok) {&#10;        const taskData = await response.json();&#10;        console.log(&quot;Task Data:&quot;, taskData);&#10;        setTaskInfo(taskData);&#10;      }&#10;    } catch (err) {&#10;      console.error(&quot;Error fetching task info:&quot;, err);&#10;    }&#10;  };&#10;&#10;  const fetchTaskItems = async () =&gt; {&#10;    try {&#10;      setItemsLoading(true);&#10;      const response = await api.getItemsSummaryByTaskId(taskId);&#10;&#10;      if (response.ok) {&#10;        const data = await response.json();&#10;        setItems(data.items || []);&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error fetching task items:&quot;, error);&#10;      setItems([]);&#10;    } finally {&#10;      setItemsLoading(false);&#10;    }&#10;  };&#10;&#10;  const formatDate = (dateString) =&gt; {&#10;    if (!dateString) return &quot;N/A&quot;;&#10;    return new Date(dateString).toLocaleDateString(&quot;zh-hk&quot;, {&#10;      year: &quot;numeric&quot;,&#10;      month: &quot;2-digit&quot;,&#10;      day: &quot;2-digit&quot;,&#10;    });&#10;  };&#10;&#10;  // Filter subtasks based on search term and status&#10;  const filteredSubTasks = subTasks.filter((subTask) =&gt; {&#10;    const matchesSearch =&#10;      subTask.id?.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||&#10;      subTask.task_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||&#10;      subTask.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||&#10;      (subTask.assignee?.name || &quot;&quot;)&#10;        .toLowerCase()&#10;        .includes(searchTerm.toLowerCase());&#10;&#10;    let matchesStatus = true;&#10;    if (selectedStatus !== &quot;all&quot;) {&#10;      matchesStatus = subTask.state?.state_name === selectedStatus;&#10;    }&#10;&#10;    return matchesSearch &amp;&amp; matchesStatus;&#10;  });&#10;&#10;  if (isLoading) {&#10;    return (&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.projects}&#10;      &gt;&#10;        &lt;Header title={`任務 #${taskId}`} /&gt;&#10;        &lt;div className=&quot;flex h-64 items-center justify-center&quot;&gt;&#10;          &lt;LoadingSpinner variant=&quot;circular&quot; size={30} message=&quot;載入中...&quot; /&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;    );&#10;  }&#10;&#10;  if (error) {&#10;    return (&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.projects}&#10;      &gt;&#10;        &lt;Header title={`任務 #${taskId}`} /&gt;&#10;        &lt;FetchDataFail&#10;          error={error}&#10;          onRetry={fetchTaskSubTasks}&#10;          className=&quot;h-64&quot;&#10;        /&gt;&#10;      &lt;/motion.div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;PermissionGate resource=&quot;task&quot; action=&quot;read&quot; header={`任務 #${taskId}`}&gt;&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.projects}&#10;      &gt;&#10;        &lt;Header title={`任務 #${taskId}`} /&gt;&#10;&#10;        &lt;div className=&quot;px-6 py-8&quot;&gt;&#10;          &lt;div className=&quot;mx-auto max-w-6xl&quot;&gt;&#10;            {/* Task Info Card - Complete Information */}&#10;            {taskInfo &amp;&amp; (&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism mb-8 rounded-2xl border border-gray-100 p-6 shadow-lg&quot;&#10;                initial={{ opacity: 0, y: 20 }}&#10;                animate={{ opacity: 1, y: 0 }}&#10;                transition={{ delay: 0.2, duration: 0.3 }}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-start gap-4&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-purple-100&quot;&gt;&#10;                    &lt;TaskIcon className=&quot;h-6 w-6 text-purple-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex-1&quot;&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                      {taskInfo.task_name || `任務 #${taskId}`}&#10;                    &lt;/h3&gt;&#10;                    &lt;p className=&quot;text-gray-600&quot;&gt;&#10;                      {taskInfo.description || &quot;無描述&quot;}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;mt-6 grid grid-cols-1 gap-4 border-t border-gray-200 pt-4 md:grid-cols-2 lg:grid-cols-4&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      任務ID&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      #{taskInfo.id}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      所屬工單&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {taskInfo?.work_order?.name || &quot;未設定&quot;} (&#10;                      {taskInfo?.work_order?.id || &quot;未設定&quot;})&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      指派給&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {taskInfo.assignee?.name || &quot;未指派&quot;}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      狀態&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      &lt;span&#10;                        className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium`}&#10;                        style={{&#10;                          backgroundColor: taskInfo.state?.bg_color,&#10;                          color: taskInfo.state?.text_color,&#10;                        }}&#10;                      &gt;&#10;                        {iconMap[taskInfo.state?.icon] &amp;&amp;&#10;                          React.createElement(iconMap[taskInfo.state.icon], {&#10;                            className: &quot;h-4 w-4&quot;,&#10;                          })}&#10;                        &amp;nbsp;&#10;                        {taskInfo.state?.state_name}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      預估工時&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {taskInfo.estimated_hour&#10;                        ? `${taskInfo.estimated_hour}h`&#10;                        : &quot;未設定&quot;}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      開始日期&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {formatDate(taskInfo.start_date)}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      截止日期&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {formatDate(taskInfo.due_date)}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;div className=&quot;text-sm font-medium text-gray-500&quot;&gt;&#10;                      創建時間&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;text-lg font-semibold text-gray-900&quot;&gt;&#10;                      {formatDate(taskInfo.created_at)}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className={`flex justify-between`}&gt;&#10;                    &lt;LogButton setShowLogModal={setShowLogModal} /&gt;&#10;                    &lt;PermissionGate resource=&quot;task&quot; action=&quot;write&quot; show={false}&gt;&#10;                      &lt;button&#10;                        onClick={() =&gt; setShowItemsModal(true)}&#10;                        className=&quot;glassmorphism flex items-center gap-2 rounded-xl border border-gray-100 px-4 py-2 text-gray-600 shadow-sm transition-colors duration-200 hover:bg-gray-50&quot;&#10;                      &gt;&#10;                        &lt;ItemIcon className=&quot;h-4 w-4&quot; /&gt;&#10;                        物件管理&#10;                      &lt;/button&gt;&#10;                      &lt;button&#10;                        onClick={() =&gt; setShowEditModal(true)}&#10;                        className=&quot;glassmorphism flex items-center gap-2 rounded-xl border border-gray-100 px-4 py-2 text-gray-600 shadow-sm transition-colors duration-200 hover:bg-gray-50&quot;&#10;                      &gt;&#10;                        &lt;Edit className=&quot;h-4 w-4&quot; /&gt;&#10;                        編輯&#10;                      &lt;/button&gt;&#10;                    &lt;/PermissionGate&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;            )}&#10;&#10;            {/* Statistics Cards */}&#10;            &lt;motion.div&#10;              className=&quot;mb-8 grid grid-cols-2 gap-4 md:grid-cols-4&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.3, duration: 0.3 }}&#10;            &gt;&#10;              &lt;motion.div&#10;                className={`glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-6 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl ${selectedStatus === &quot;all&quot; ? &quot;ring-2 ring-blue-500&quot; : &quot;&quot;}`}&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.1 }}&#10;                onClick={() =&gt; setSelectedStatus(&quot;all&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-blue-100&quot;&gt;&#10;                    &lt;TaskIcon className=&quot;text-blue h-6 w-6&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;總子任務&lt;/p&gt;&#10;                    &lt;p className=&quot;text-2xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.totalSubTasks}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className={`glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-6 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl ${selectedStatus === &quot;active&quot; ? &quot;ring-2 ring-green-500&quot; : &quot;&quot;}`}&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.2 }}&#10;                onClick={() =&gt; setSelectedStatus(&quot;active&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-green-100&quot;&gt;&#10;                    &lt;ActiveIcon className=&quot;h-6 w-6 text-green-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;進行中&lt;/p&gt;&#10;                    &lt;p className=&quot;text-2xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.activeSubTasks}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className={`glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-6 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl ${selectedStatus === &quot;pending&quot; ? &quot;ring-2 ring-yellow-500&quot; : &quot;&quot;}`}&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.3 }}&#10;                onClick={() =&gt; setSelectedStatus(&quot;pending&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-yellow-100&quot;&gt;&#10;                    &lt;PendingIcon className=&quot;h-6 w-6 text-yellow-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;待開始&lt;/p&gt;&#10;                    &lt;p className=&quot;text-2xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.pendingSubTasks}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className={`glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-6 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl ${selectedStatus === &quot;completed&quot; ? &quot;ring-2 ring-red-500&quot; : &quot;&quot;}`}&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.4 }}&#10;                onClick={() =&gt; setSelectedStatus(&quot;completed&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-12 w-12 items-center justify-center rounded-full bg-red-100&quot;&gt;&#10;                    &lt;CompletedIcon className=&quot;h-6 w-6 text-red-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;已完成&lt;/p&gt;&#10;                    &lt;p className=&quot;text-2xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.completedSubTasks}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* Task Items Section */}&#10;            &lt;motion.div&#10;              className=&quot;glassmorphism mb-8 rounded-2xl border border-gray-100 p-6 shadow-lg&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.35, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center gap-3 mb-4&quot;&gt;&#10;                &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-blue-100&quot;&gt;&#10;                  &lt;ItemIcon className=&quot;h-5 w-5 text-blue-600&quot; /&gt;&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                    任務物品&#10;                    {items.length &gt; 0 &amp;&amp; (&#10;                      &lt;span className=&quot;ml-2 text-sm font-normal text-gray-500&quot;&gt;&#10;                        ({items.length} 項)&#10;                      &lt;/span&gt;&#10;                    )}&#10;                  &lt;/h3&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              {itemsLoading ? (&#10;                &lt;div className=&quot;py-8 text-center&quot;&gt;&#10;                  &lt;div className=&quot;mx-auto h-6 w-6 animate-spin rounded-full border-2 border-gray-300 border-t-blue-600&quot;&gt;&lt;/div&gt;&#10;                  &lt;p className=&quot;mt-2 text-sm text-gray-500&quot;&gt;載入物品中...&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              ) : items.length &gt; 0 ? (&#10;                &lt;div className=&quot;grid grid-cols-1 gap-3 md:grid-cols-2 lg:grid-cols-3&quot;&gt;&#10;                  {items.map((item, index) =&gt; (&#10;                    &lt;motion.div&#10;                      key={index}&#10;                      className=&quot;flex items-center rounded-lg border border-gray-200 bg-white p-4 shadow-sm&quot;&#10;                      initial={{ opacity: 0, y: 10 }}&#10;                      animate={{ opacity: 1, y: 0 }}&#10;                      transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                    &gt;&#10;                      &lt;div className=&quot;flex-1&quot;&gt;&#10;                        &lt;p className=&quot;font-medium text-gray-900&quot;&gt;&#10;                          {item.number_of_item} × {item.item_quantity}{&quot; &quot;}&#10;                          {item.item_material_unit} {item.item_material_type}&#10;                        &lt;/p&gt;&#10;                        &lt;p className=&quot;text-sm text-gray-500 mt-1&quot;&gt;&#10;                          物品 #{item.item_id || 'N/A'}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/motion.div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              ) : (&#10;                &lt;div className=&quot;py-8 text-center&quot;&gt;&#10;                  &lt;ItemIcon className=&quot;mx-auto h-12 w-12 text-gray-400&quot; /&gt;&#10;                  &lt;p className=&quot;mt-2 text-gray-500&quot;&gt;暫無物品資料&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* Search and Filter */}&#10;            &lt;motion.div&#10;              className=&quot;mb-6 flex flex-col gap-4 md:flex-row md:items-center md:justify-between&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.4, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;relative max-w-md flex-1&quot;&gt;&#10;                &lt;Search className=&quot;absolute top-1/2 left-3 z-10 h-5 w-5 -translate-y-1/2 text-gray-400&quot; /&gt;&#10;                &lt;input&#10;                  type=&quot;text&quot;&#10;                  placeholder=&quot;搜索子任務 ID、名稱或描述...&quot;&#10;                  className=&quot;glassmorphism w-full rounded-xl border border-gray-300 py-3 pr-4 pl-10 transition-all duration-200 focus:border-transparent focus:ring-2 focus:ring-blue-500&quot;&#10;                  value={searchTerm}&#10;                  onChange={(e) =&gt; setSearchTerm(e.target.value)}&#10;                /&gt;&#10;              &lt;/div&gt;&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* SubTasks List/Grid */}&#10;            &lt;motion.div&#10;              className=&quot;glassmorphism overflow-hidden rounded-2xl border border-gray-100 shadow-lg&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.5, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center justify-between border-b border-gray-200 bg-gray-50 px-6 py-4&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                  子任務清單 ({filteredSubTasks.length})&#10;                &lt;/h3&gt;&#10;                &lt;button&#10;                  onClick={() =&gt;&#10;                    setViewMode(viewMode === &quot;list&quot; ? &quot;grid&quot; : &quot;list&quot;)&#10;                  }&#10;                  className=&quot;glassmorphism flex w-fit items-center gap-2 rounded-xl border border-gray-100 px-4 py-2 text-gray-600 shadow-sm transition-colors duration-200 hover:bg-gray-50&quot;&#10;                &gt;&#10;                  {viewMode === &quot;list&quot; ? (&#10;                    &lt;ViewModule className=&quot;h-5 w-5&quot; /&gt;&#10;                  ) : (&#10;                    &lt;ViewList className=&quot;h-5 w-5&quot; /&gt;&#10;                  )}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;&#10;              {filteredSubTasks.length === 0 ? (&#10;                &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;                  &lt;TaskIcon className=&quot;mx-auto h-12 w-12 text-gray-400&quot; /&gt;&#10;                  &lt;p className=&quot;mt-2 text-gray-500&quot;&gt;&#10;                    {searchTerm || selectedStatus !== &quot;all&quot;&#10;                      ? &quot;沒有符合條件的子任務&quot;&#10;                      : &quot;暫無子任務資料&quot;}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              ) : viewMode === &quot;list&quot; ? (&#10;                &lt;div className=&quot;overflow-x-auto&quot;&gt;&#10;                  &lt;table className=&quot;w-full&quot;&gt;&#10;                    &lt;thead className=&quot;bg-gray-50&quot;&gt;&#10;                      &lt;tr&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          子任務 ID&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;min-w-[140px] px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase&quot;&gt;&#10;                          子任務名稱&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          指派給&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          描述&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          狀態&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;min-w-[100px] px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          預估工時&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;min-w-[100px] px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          開始日期&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;min-w-[100px] px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          截止日期&#10;                        &lt;/th&gt;&#10;                      &lt;/tr&gt;&#10;                    &lt;/thead&gt;&#10;                    &lt;tbody className=&quot;glassmorphism divide-y divide-gray-200&quot;&gt;&#10;                      {filteredSubTasks.map((subTask, index) =&gt; (&#10;                        &lt;motion.tr&#10;                          key={subTask.id}&#10;                          className=&quot;cursor-pointer hover:bg-gray-50&quot;&#10;                          initial={{ opacity: 0, x: -20 }}&#10;                          animate={{ opacity: 1, x: 0 }}&#10;                          transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                          onClick={() =&gt; navigate(`/subtask/${subTask.id}`)}&#10;                        &gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center&quot;&gt;&#10;                              &lt;div className=&quot;flex h-8 w-8 items-center justify-center rounded-full bg-purple-100&quot;&gt;&#10;                                &lt;SubTaskIcon className=&quot;text-purple h-4 w-4&quot; /&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;ml-3&quot;&gt;&#10;                                &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                                  {subTask.id}&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm font-medium whitespace-nowrap text-gray-900&quot;&gt;&#10;                            {subTask.subtask_name}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm whitespace-nowrap text-gray-500&quot;&gt;&#10;                            {subTask.assignee?.name || &quot;未指派&quot;}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;max-w-xs truncate px-6 py-4 text-sm text-gray-500&quot;&gt;&#10;                            {subTask.description || &quot;無描述&quot;}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;span&#10;                              className={`inline-flex items-center gap-1 rounded-full px-2 py-1 text-xs font-semibold`}&#10;                              style={{&#10;                                backgroundColor: subTask.state?.bg_color,&#10;                                color: subTask.state?.text_color,&#10;                              }}&#10;                            &gt;&#10;                              {iconMap[subTask.state?.icon] &amp;&amp;&#10;                                React.createElement(&#10;                                  iconMap[subTask.state.icon],&#10;                                  {&#10;                                    className: &quot;h-4 w-4&quot;,&#10;                                  },&#10;                                )}&#10;                              &amp;nbsp;&#10;                              {subTask.state?.state_name}&#10;                            &lt;/span&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm whitespace-nowrap text-gray-500&quot;&gt;&#10;                            {subTask.estimated_hour&#10;                              ? `${subTask.estimated_hour}h`&#10;                              : &quot;N/A&quot;}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm whitespace-nowrap text-gray-500&quot;&gt;&#10;                            {formatDate(subTask.start_date)}&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm whitespace-nowrap text-gray-500&quot;&gt;&#10;                            {formatDate(subTask.due_date)}&#10;                          &lt;/td&gt;&#10;                        &lt;/motion.tr&gt;&#10;                      ))}&#10;                    &lt;/tbody&gt;&#10;                  &lt;/table&gt;&#10;                &lt;/div&gt;&#10;              ) : (&#10;                &lt;div className=&quot;grid grid-cols-1 gap-4 p-6 md:grid-cols-2 lg:grid-cols-3&quot;&gt;&#10;                  {filteredSubTasks.map((subTask, index) =&gt; (&#10;                    &lt;motion.div&#10;                      key={subTask.id}&#10;                      className=&quot;cursor-pointer rounded-xl border border-gray-200 bg-gray-50 p-4 transition-shadow duration-200 hover:shadow-md&quot;&#10;                      initial={{ opacity: 0, scale: 0.9 }}&#10;                      animate={{ opacity: 1, scale: 1 }}&#10;                      transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                      onClick={() =&gt; navigate(`/subtask/${subTask.id}`)}&#10;                    &gt;&#10;                      &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                          &lt;span&#10;                            className={`inline-flex aspect-square h-10 w-10 items-center justify-center rounded-full text-xs font-semibold`}&#10;                            style={{&#10;                              backgroundColor: subTask.state?.bg_color,&#10;                              color: subTask.state?.text_color,&#10;                            }}&#10;                          &gt;&#10;                            {iconMap[subTask.state?.icon] &amp;&amp;&#10;                              React.createElement(iconMap[subTask.state.icon], {&#10;                                className: &quot;h-5 w-5&quot;,&#10;                              })}&#10;                          &lt;/span&gt;&#10;                          &lt;div&gt;&#10;                            &lt;h4 className=&quot;font-medium text-gray-900&quot;&gt;&#10;                              {subTask.subtask_name}&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-500&quot;&gt;&#10;                              #{subTask.id}&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;mt-4&quot;&gt;&#10;                        &lt;p className=&quot;line-clamp-2 text-sm text-gray-600&quot;&gt;&#10;                          {subTask.description || &quot;無描述&quot;}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;mt-4 grid grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                            {subTask.assignee?.name || &quot;未指派&quot;}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;指派給&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                            {subTask.estimated_hour&#10;                              ? `${subTask.estimated_hour}h`&#10;                              : &quot;未設定&quot;}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;預估工時&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;mt-4 grid grid-cols-2 gap-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                            {formatDate(subTask.start_date)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;開始日期&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div&gt;&#10;                          &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                            {formatDate(subTask.due_date)}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;截止日期&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/motion.div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/motion.div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;      &lt;ProcessLog&#10;        isOpen={showLogModal}&#10;        onClose={() =&gt; setShowLogModal(false)}&#10;        entityType=&quot;task&quot;&#10;        entityId={taskId}&#10;      /&gt;&#10;      &lt;EditTaskModal&#10;        isOpen={showEditModal}&#10;        onClose={() =&gt; setShowEditModal(false)}&#10;        task={taskInfo}&#10;        onSave={(updatedTask) =&gt; {&#10;          setTaskInfo(updatedTask);&#10;          fetchTaskSubTasks();&#10;          fetchTaskInfo();&#10;        }}&#10;        workOrderId={taskInfo?.work_order?.id}&#10;      /&gt;&#10;&#10;      &lt;EditSubTaskModal&#10;        isOpen={showAddModal}&#10;        onClose={() =&gt; setShowAddModal(false)}&#10;        taskId={taskId}&#10;        onSave={() =&gt; {&#10;          fetchTaskSubTasks();&#10;          fetchTaskInfo();&#10;        }}&#10;      /&gt;&#10;&#10;      &lt;TaskItemsModal&#10;        isOpen={showItemsModal}&#10;        onClose={() =&gt; setShowItemsModal(false)}&#10;        task={taskInfo}&#10;        onItemsUpdated={() =&gt; {&#10;          fetchTaskSubTasks();&#10;          fetchTaskInfo();&#10;        }}&#10;      /&gt;&#10;&#10;      &lt;PermissionGate resource=&quot;subtask&quot; action=&quot;create&quot; show={false}&gt;&#10;        &lt;AddButton action={() =&gt; setShowAddModal(true)} /&gt;&#10;      &lt;/PermissionGate&gt;&#10;    &lt;/PermissionGate&gt;&#10;  );&#10;};&#10;&#10;export default Task;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>