<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/frontend/src/assets/icons/task.svg">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/assets/icons/task.svg" />
              <option name="originalContent" value="&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; shape-rendering=&quot;geometricPrecision&quot; text-rendering=&quot;geometricPrecision&quot; image-rendering=&quot;optimizeQuality&quot; fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; zoomAndPan=&quot;magnify&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; version=&quot;1.2&quot; viewBox=&quot;568.13 243 303.75 324&quot;&gt;&lt;defs&gt;&lt;clipPath id=&quot;19803a20b5&quot;&gt;&lt;path d=&quot;M 568.125 384 L 871.875 384 L 871.875 567 L 568.125 567 Z M 568.125 384 &quot;&gt;&lt;/path&gt;&lt;/clipPath&gt;&lt;clipPath id=&quot;47458055ab&quot;&gt;&lt;path d=&quot;M 568.125 243 L 871.875 243 L 871.875 365 L 568.125 365 Z M 568.125 243 &quot;&gt;&lt;/path&gt;&lt;/clipPath&gt;&lt;/defs&gt;&lt;g id=&quot;f8c13798bc&quot;&gt;&lt;g clip-rule=&quot;nonzero&quot; clip-path=&quot;url(#19803a20b5)&quot;&gt;&lt;path d=&quot;M 851.625 536.625 C 851.625 537.289062 851.558594 537.949219 851.429688 538.601562 C 851.300781 539.253906 851.109375 539.886719 850.855469 540.5 C 850.601562 541.113281 850.289062 541.699219 849.917969 542.25 C 849.550781 542.804688 849.128906 543.3125 848.660156 543.785156 C 848.1875 544.253906 847.679688 544.675781 847.125 545.042969 C 846.574219 545.414062 845.988281 545.726562 845.375 545.980469 C 844.761719 546.234375 844.128906 546.425781 843.476562 546.554688 C 842.824219 546.683594 842.164062 546.75 841.5 546.75 L 598.5 546.75 C 597.835938 546.75 597.175781 546.683594 596.523438 546.554688 C 595.871094 546.425781 595.238281 546.234375 594.625 545.980469 C 594.011719 545.726562 593.425781 545.414062 592.875 545.042969 C 592.320312 544.675781 591.8125 544.253906 591.339844 543.785156 C 590.871094 543.3125 590.449219 542.804688 590.082031 542.25 C 589.710938 541.699219 589.398438 541.113281 589.144531 540.5 C 588.890625 539.886719 588.699219 539.253906 588.570312 538.601562 C 588.441406 537.949219 588.375 537.289062 588.375 536.625 L 588.375 384.75 L 568.125 384.75 L 568.125 536.625 C 568.125 537.621094 568.171875 538.613281 568.269531 539.601562 C 568.367188 540.59375 568.515625 541.574219 568.707031 542.550781 C 568.902344 543.527344 569.144531 544.492188 569.433594 545.441406 C 569.722656 546.394531 570.054688 547.328125 570.4375 548.25 C 570.816406 549.167969 571.242188 550.066406 571.710938 550.945312 C 572.179688 551.820312 572.691406 552.671875 573.242188 553.5 C 573.796875 554.328125 574.390625 555.125 575.019531 555.894531 C 575.652344 556.664062 576.316406 557.398438 577.023438 558.101562 C 577.726562 558.808594 578.460938 559.472656 579.230469 560.105469 C 580 560.734375 580.796875 561.328125 581.625 561.882812 C 582.453125 562.433594 583.304688 562.945312 584.179688 563.414062 C 585.058594 563.882812 585.957031 564.308594 586.875 564.6875 C 587.796875 565.070312 588.730469 565.402344 589.683594 565.691406 C 590.632812 565.980469 591.597656 566.222656 592.574219 566.417969 C 593.550781 566.609375 594.53125 566.757812 595.523438 566.855469 C 596.511719 566.953125 597.503906 567 598.5 567 L 841.5 567 C 842.496094 567 843.488281 566.953125 844.476562 566.855469 C 845.46875 566.757812 846.449219 566.609375 847.425781 566.417969 C 848.402344 566.222656 849.367188 565.980469 850.316406 565.691406 C 851.269531 565.402344 852.203125 565.070312 853.125 564.6875 C 854.042969 564.308594 854.941406 563.882812 855.820312 563.414062 C 856.695312 562.945312 857.546875 562.433594 858.375 561.882812 C 859.203125 561.328125 860 560.734375 860.769531 560.105469 C 861.539062 559.472656 862.273438 558.808594 862.976562 558.101562 C 863.683594 557.398438 864.347656 556.664062 864.980469 555.894531 C 865.609375 555.125 866.203125 554.328125 866.753906 553.5 C 867.308594 552.671875 867.820312 551.820312 868.289062 550.945312 C 868.757812 550.066406 869.183594 549.167969 869.5625 548.25 C 869.945312 547.328125 870.277344 546.394531 870.566406 545.441406 C 870.855469 544.492188 871.097656 543.527344 871.292969 542.550781 C 871.484375 541.574219 871.632812 540.59375 871.730469 539.601562 C 871.828125 538.613281 871.875 537.621094 871.875 536.625 L 871.875 384.75 L 851.625 384.75 Z M 851.625 536.625 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g clip-rule=&quot;nonzero&quot; clip-path=&quot;url(#47458055ab)&quot;&gt;&lt;path style=&quot;&quot; d=&quot;M 861.75 273.375 L 801 273.375 L 801 253.125 C 801 252.460938 800.933594 251.800781 800.804688 251.148438 C 800.675781 250.496094 800.484375 249.863281 800.230469 249.25 C 799.976562 248.636719 799.664062 248.050781 799.292969 247.5 C 798.925781 246.945312 798.503906 246.4375 798.035156 245.964844 C 797.5625 245.496094 797.054688 245.074219 796.5 244.707031 C 795.949219 244.335938 795.363281 244.023438 794.75 243.769531 C 794.136719 243.515625 793.503906 243.324219 792.851562 243.195312 C 792.199219 243.066406 791.539062 243 790.875 243 C 790.210938 243 789.550781 243.066406 788.898438 243.195312 C 788.246094 243.324219 787.613281 243.515625 787 243.769531 C 786.386719 244.023438 785.800781 244.335938 785.25 244.707031 C 784.695312 245.074219 784.1875 245.496094 783.714844 245.964844 C 783.246094 246.4375 782.824219 246.945312 782.457031 247.5 C 782.085938 248.050781 781.773438 248.636719 781.519531 249.25 C 781.265625 249.863281 781.074219 250.496094 780.945312 251.148438 C 780.816406 251.800781 780.75 252.460938 780.75 253.125 L 780.75 273.375 L 659.25 273.375 L 659.25 253.125 C 659.25 252.460938 659.183594 251.800781 659.054688 251.148438 C 658.925781 250.496094 658.734375 249.863281 658.480469 249.25 C 658.226562 248.636719 657.914062 248.050781 657.542969 247.5 C 657.175781 246.945312 656.753906 246.4375 656.285156 245.964844 C 655.8125 245.496094 655.304688 245.074219 654.75 244.707031 C 654.199219 244.335938 653.613281 244.023438 653 243.769531 C 652.386719 243.515625 651.753906 243.324219 651.101562 243.195312 C 650.449219 243.066406 649.789062 243 649.125 243 C 648.460938 243 647.800781 243.066406 647.148438 243.195312 C 646.496094 243.324219 645.863281 243.515625 645.25 243.769531 C 644.636719 244.023438 644.050781 244.335938 643.5 244.707031 C 642.945312 245.074219 642.4375 245.496094 641.964844 245.964844 C 641.496094 246.4375 641.074219 246.945312 640.707031 247.5 C 640.335938 248.050781 640.023438 248.636719 639.769531 249.25 C 639.515625 249.863281 639.324219 250.496094 639.195312 251.148438 C 639.066406 251.800781 639 252.460938 639 253.125 L 639 273.375 L 578.25 273.375 C 577.585938 273.375 576.925781 273.441406 576.273438 273.570312 C 575.621094 273.699219 574.988281 273.890625 574.375 274.144531 C 573.761719 274.398438 573.175781 274.710938 572.625 275.082031 C 572.070312 275.449219 571.5625 275.871094 571.089844 276.339844 C 570.621094 276.8125 570.199219 277.320312 569.832031 277.875 C 569.460938 278.425781 569.148438 279.011719 568.894531 279.625 C 568.640625 280.238281 568.449219 280.871094 568.320312 281.523438 C 568.191406 282.175781 568.125 282.835938 568.125 283.5 L 568.125 354.375 C 568.125 355.039062 568.191406 355.699219 568.320312 356.351562 C 568.449219 357.003906 568.640625 357.636719 568.894531 358.25 C 569.148438 358.863281 569.460938 359.449219 569.832031 360 C 570.199219 360.554688 570.621094 361.0625 571.089844 361.535156 C 571.5625 362.003906 572.070312 362.425781 572.625 362.792969 C 573.175781 363.164062 573.761719 363.476562 574.375 363.730469 C 574.988281 363.984375 575.621094 364.175781 576.273438 364.304688 C 576.925781 364.433594 577.585938 364.5 578.25 364.5 L 861.75 364.5 C 862.414062 364.5 863.074219 364.433594 863.726562 364.304688 C 864.378906 364.175781 865.011719 363.984375 865.625 363.730469 C 866.238281 363.476562 866.824219 363.164062 867.375 362.792969 C 867.929688 362.425781 868.4375 362.003906 868.910156 361.535156 C 869.378906 361.0625 869.800781 360.554688 870.167969 360 C 870.539062 359.449219 870.851562 358.863281 871.105469 358.25 C 871.359375 357.636719 871.550781 357.003906 871.679688 356.351562 C 871.808594 355.699219 871.875 355.039062 871.875 354.375 L 871.875 283.5 C 871.875 282.835938 871.808594 282.175781 871.679688 281.523438 C 871.550781 280.871094 871.359375 280.238281 871.105469 279.625 C 870.851562 279.011719 870.539062 278.425781 870.167969 277.875 C 869.800781 277.320312 869.378906 276.8125 868.910156 276.339844 C 868.4375 275.871094 867.929688 275.449219 867.375 275.082031 C 866.824219 274.710938 866.238281 274.398438 865.625 274.144531 C 865.011719 273.890625 864.378906 273.699219 863.726562 273.570312 C 863.074219 273.441406 862.414062 273.375 861.75 273.375 Z M 851.625 344.25 L 588.375 344.25 L 588.375 293.625 L 639 293.625 L 639 303.75 C 639 304.414062 639.066406 305.074219 639.195312 305.726562 C 639.324219 306.378906 639.515625 307.011719 639.769531 307.625 C 640.023438 308.238281 640.335938 308.824219 640.707031 309.375 C 641.074219 309.929688 641.496094 310.4375 641.964844 310.910156 C 642.4375 311.378906 642.945312 311.800781 643.5 312.167969 C 644.050781 312.539062 644.636719 312.851562 645.25 313.105469 C 645.863281 313.359375 646.496094 313.550781 647.148438 313.679688 C 647.800781 313.808594 648.460938 313.875 649.125 313.875 C 649.789062 313.875 650.449219 313.808594 651.101562 313.679688 C 651.753906 313.550781 652.386719 313.359375 653 313.105469 C 653.613281 312.851562 654.199219 312.539062 654.75 312.167969 C 655.304688 311.800781 655.8125 311.378906 656.285156 310.910156 C 656.753906 310.4375 657.175781 309.929688 657.542969 309.375 C 657.914062 308.824219 658.226562 308.238281 658.480469 307.625 C 658.734375 307.011719 658.925781 306.378906 659.054688 305.726562 C 659.183594 305.074219 659.25 304.414062 659.25 303.75 L 659.25 293.625 L 780.75 293.625 L 780.75 303.75 C 780.75 304.414062 780.816406 305.074219 780.945312 305.726562 C 781.074219 306.378906 781.265625 307.011719 781.519531 307.625 C 781.773438 308.238281 782.085938 308.824219 782.457031 309.375 C 782.824219 309.929688 783.246094 310.4375 783.714844 310.910156 C 784.1875 311.378906 784.695312 311.800781 785.25 312.167969 C 785.800781 312.539062 786.386719 312.851562 787 313.105469 C 787.613281 313.359375 788.246094 313.550781 788.898438 313.679688 C 789.550781 313.808594 790.210938 313.875 790.875 313.875 C 791.539062 313.875 792.199219 313.808594 792.851562 313.679688 C 793.503906 313.550781 794.136719 313.359375 794.75 313.105469 C 795.363281 312.851562 795.949219 312.539062 796.5 312.167969 C 797.054688 311.800781 797.5625 311.378906 798.035156 310.910156 C 798.503906 310.4375 798.925781 309.929688 799.292969 309.375 C 799.664062 308.824219 799.976562 308.238281 800.230469 307.625 C 800.484375 307.011719 800.675781 306.378906 800.804688 305.726562 C 800.933594 305.074219 801 304.414062 801 303.75 L 801 293.625 L 851.625 293.625 Z M 851.625 344.25 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;path style=&quot;&quot; d=&quot;M 704.40625 496.125 C 705.792969 496.105469 707.117188 495.816406 708.386719 495.253906 C 709.652344 494.691406 710.753906 493.902344 711.699219 492.886719 L 777.914062 422.011719 C 778.316406 421.515625 778.667969 420.988281 778.96875 420.429688 C 779.269531 419.871094 779.515625 419.289062 779.707031 418.679688 C 779.898438 418.074219 780.03125 417.457031 780.105469 416.824219 C 780.179688 416.195312 780.195312 415.5625 780.152344 414.925781 C 780.105469 414.292969 780.003906 413.667969 779.839844 413.054688 C 779.679688 412.441406 779.460938 411.84375 779.1875 411.273438 C 778.914062 410.699219 778.589844 410.15625 778.214844 409.644531 C 777.835938 409.128906 777.417969 408.65625 776.953125 408.222656 C 776.488281 407.789062 775.984375 407.40625 775.449219 407.066406 C 774.910156 406.726562 774.34375 406.441406 773.753906 406.210938 C 773.160156 405.976562 772.554688 405.800781 771.929688 405.683594 C 771.304688 405.566406 770.675781 405.507812 770.039062 405.507812 C 769.402344 405.507812 768.773438 405.570312 768.148438 405.6875 C 767.523438 405.808594 766.917969 405.984375 766.328125 406.21875 C 765.734375 406.453125 765.171875 406.738281 764.632812 407.078125 C 764.097656 407.417969 763.597656 407.804688 763.132812 408.238281 L 704.105469 471.421875 L 681.625 448.539062 C 681.175781 448.003906 680.675781 447.523438 680.125 447.09375 C 679.578125 446.664062 678.988281 446.296875 678.363281 445.988281 C 677.738281 445.679688 677.085938 445.4375 676.410156 445.265625 C 675.734375 445.089844 675.050781 444.988281 674.351562 444.957031 C 673.65625 444.925781 672.960938 444.964844 672.273438 445.078125 C 671.585938 445.1875 670.914062 445.367188 670.265625 445.617188 C 669.613281 445.867188 668.992188 446.183594 668.40625 446.558594 C 667.820312 446.9375 667.28125 447.371094 666.78125 447.859375 C 666.285156 448.351562 665.84375 448.886719 665.457031 449.46875 C 665.074219 450.046875 664.75 450.664062 664.492188 451.308594 C 664.230469 451.957031 664.042969 452.625 663.921875 453.3125 C 663.800781 454 663.75 454.691406 663.769531 455.386719 C 663.792969 456.085938 663.886719 456.773438 664.050781 457.453125 C 664.214844 458.128906 664.445312 458.785156 664.746094 459.414062 C 665.042969 460.042969 665.40625 460.636719 665.828125 461.191406 C 666.25 461.75 666.722656 462.253906 667.25 462.710938 L 697.625 493.085938 C 698.519531 494.003906 699.554688 494.726562 700.726562 495.25 C 701.898438 495.777344 703.125 496.066406 704.40625 496.125 Z M 704.40625 496.125 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/svg&gt;&#10;" />
              <option name="updatedContent" value="&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; shape-rendering=&quot;geometricPrecision&quot; text-rendering=&quot;geometricPrecision&quot; image-rendering=&quot;optimizeQuality&quot; fill=&quot;currentColor&quot; fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; zoomAndPan=&quot;magnify&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; version=&quot;1.2&quot; viewBox=&quot;568.13 243 303.75 324&quot;&gt;&lt;defs&gt;&lt;clipPath id=&quot;19803a20b5&quot;&gt;&lt;path d=&quot;M 568.125 384 L 871.875 384 L 871.875 567 L 568.125 567 Z M 568.125 384 &quot;&gt;&lt;/path&gt;&lt;/clipPath&gt;&lt;clipPath id=&quot;47458055ab&quot;&gt;&lt;path d=&quot;M 568.125 243 L 871.875 243 L 871.875 365 L 568.125 365 Z M 568.125 243 &quot;&gt;&lt;/path&gt;&lt;/clipPath&gt;&lt;/defs&gt;&lt;g id=&quot;f8c13798bc&quot;&gt;&lt;g clip-rule=&quot;nonzero&quot; clip-path=&quot;url(#19803a20b5)&quot;&gt;&lt;path d=&quot;M 851.625 536.625 C 851.625 537.289062 851.558594 537.949219 851.429688 538.601562 C 851.300781 539.253906 851.109375 539.886719 850.855469 540.5 C 850.601562 541.113281 850.289062 541.699219 849.917969 542.25 C 849.550781 542.804688 849.128906 543.3125 848.660156 543.785156 C 848.1875 544.253906 847.679688 544.675781 847.125 545.042969 C 846.574219 545.414062 845.988281 545.726562 845.375 545.980469 C 844.761719 546.234375 844.128906 546.425781 843.476562 546.554688 C 842.824219 546.683594 842.164062 546.75 841.5 546.75 L 598.5 546.75 C 597.835938 546.75 597.175781 546.683594 596.523438 546.554688 C 595.871094 546.425781 595.238281 546.234375 594.625 545.980469 C 594.011719 545.726562 593.425781 545.414062 592.875 545.042969 C 592.320312 544.675781 591.8125 544.253906 591.339844 543.785156 C 590.871094 543.3125 590.449219 542.804688 590.082031 542.25 C 589.710938 541.699219 589.398438 541.113281 589.144531 540.5 C 588.890625 539.886719 588.699219 539.253906 588.570312 538.601562 C 588.441406 537.949219 588.375 537.289062 588.375 536.625 L 588.375 384.75 L 568.125 384.75 L 568.125 536.625 C 568.125 537.621094 568.171875 538.613281 568.269531 539.601562 C 568.367188 540.59375 568.515625 541.574219 568.707031 542.550781 C 568.902344 543.527344 569.144531 544.492188 569.433594 545.441406 C 569.722656 546.394531 570.054688 547.328125 570.4375 548.25 C 570.816406 549.167969 571.242188 550.066406 571.710938 550.945312 C 572.179688 551.820312 572.691406 552.671875 573.242188 553.5 C 573.796875 554.328125 574.390625 555.125 575.019531 555.894531 C 575.652344 556.664062 576.316406 557.398438 577.023438 558.101562 C 577.726562 558.808594 578.460938 559.472656 579.230469 560.105469 C 580 560.734375 580.796875 561.328125 581.625 561.882812 C 582.453125 562.433594 583.304688 562.945312 584.179688 563.414062 C 585.058594 563.882812 585.957031 564.308594 586.875 564.6875 C 587.796875 565.070312 588.730469 565.402344 589.683594 565.691406 C 590.632812 565.980469 591.597656 566.222656 592.574219 566.417969 C 593.550781 566.609375 594.53125 566.757812 595.523438 566.855469 C 596.511719 566.953125 597.503906 567 598.5 567 L 841.5 567 C 842.496094 567 843.488281 566.953125 844.476562 566.855469 C 845.46875 566.757812 846.449219 566.609375 847.425781 566.417969 C 848.402344 566.222656 849.367188 565.980469 850.316406 565.691406 C 851.269531 565.402344 852.203125 565.070312 853.125 564.6875 C 854.042969 564.308594 854.941406 563.882812 855.820312 563.414062 C 856.695312 562.945312 857.546875 562.433594 858.375 561.882812 C 859.203125 561.328125 860 560.734375 860.769531 560.105469 C 861.539062 559.472656 862.273438 558.808594 862.976562 558.101562 C 863.683594 557.398438 864.347656 556.664062 864.980469 555.894531 C 865.609375 555.125 866.203125 554.328125 866.753906 553.5 C 867.308594 552.671875 867.820312 551.820312 868.289062 550.945312 C 868.757812 550.066406 869.183594 549.167969 869.5625 548.25 C 869.945312 547.328125 870.277344 546.394531 870.566406 545.441406 C 870.855469 544.492188 871.097656 543.527344 871.292969 542.550781 C 871.484375 541.574219 871.632812 540.59375 871.730469 539.601562 C 871.828125 538.613281 871.875 537.621094 871.875 536.625 L 871.875 384.75 L 851.625 384.75 Z M 851.625 536.625 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g clip-rule=&quot;nonzero&quot; clip-path=&quot;url(#47458055ab)&quot;&gt;&lt;path d=&quot;M 861.75 273.375 L 801 273.375 L 801 253.125 C 801 252.460938 800.933594 251.800781 800.804688 251.148438 C 800.675781 250.496094 800.484375 249.863281 800.230469 249.25 C 799.976562 248.636719 799.664062 248.050781 799.292969 247.5 C 798.925781 246.945312 798.503906 246.4375 798.035156 245.964844 C 797.5625 245.496094 797.054688 245.074219 796.5 244.707031 C 795.949219 244.335938 795.363281 244.023438 794.75 243.769531 C 794.136719 243.515625 793.503906 243.324219 792.851562 243.195312 C 792.199219 243.066406 791.539062 243 790.875 243 C 790.210938 243 789.550781 243.066406 788.898438 243.195312 C 788.246094 243.324219 787.613281 243.515625 787 243.769531 C 786.386719 244.023438 785.800781 244.335938 785.25 244.707031 C 784.695312 245.074219 784.1875 245.496094 783.714844 245.964844 C 783.246094 246.4375 782.824219 246.945312 782.457031 247.5 C 782.085938 248.050781 781.773438 248.636719 781.519531 249.25 C 781.265625 249.863281 781.074219 250.496094 780.945312 251.148438 C 780.816406 251.800781 780.75 252.460938 780.75 253.125 L 780.75 273.375 L 659.25 273.375 L 659.25 253.125 C 659.25 252.460938 659.183594 251.800781 659.054688 251.148438 C 658.925781 250.496094 658.734375 249.863281 658.480469 249.25 C 658.226562 248.636719 657.914062 248.050781 657.542969 247.5 C 657.175781 246.945312 656.753906 246.4375 656.285156 245.964844 C 655.8125 245.496094 655.304688 245.074219 654.75 244.707031 C 654.199219 244.335938 653.613281 244.023438 653 243.769531 C 652.386719 243.515625 651.753906 243.324219 651.101562 243.195312 C 650.449219 243.066406 649.789062 243 649.125 243 C 648.460938 243 647.800781 243.066406 647.148438 243.195312 C 646.496094 243.324219 645.863281 243.515625 645.25 243.769531 C 644.636719 244.023438 644.050781 244.335938 643.5 244.707031 C 642.945312 245.074219 642.4375 245.496094 641.964844 245.964844 C 641.496094 246.4375 641.074219 246.945312 640.707031 247.5 C 640.335938 248.050781 640.023438 248.636719 639.769531 249.25 C 639.515625 249.863281 639.324219 250.496094 639.195312 251.148438 C 639.066406 251.800781 639 252.460938 639 253.125 L 639 273.375 L 578.25 273.375 C 577.585938 273.375 576.925781 273.441406 576.273438 273.570312 C 575.621094 273.699219 574.988281 273.890625 574.375 274.144531 C 573.761719 274.398438 573.175781 274.710938 572.625 275.082031 C 572.070312 275.449219 571.5625 275.871094 571.089844 276.339844 C 570.621094 276.8125 570.199219 277.320312 569.832031 277.875 C 569.460938 278.425781 569.148438 279.011719 568.894531 279.625 C 568.640625 280.238281 568.449219 280.871094 568.320312 281.523438 C 568.191406 282.175781 568.125 282.835938 568.125 283.5 L 568.125 354.375 C 568.125 355.039062 568.191406 355.699219 568.320312 356.351562 C 568.449219 357.003906 568.640625 357.636719 568.894531 358.25 C 569.148438 358.863281 569.460938 359.449219 569.832031 360 C 570.199219 360.554688 570.621094 361.0625 571.089844 361.535156 C 571.5625 362.003906 572.070312 362.425781 572.625 362.792969 C 573.175781 363.164062 573.761719 363.476562 574.375 363.730469 C 574.988281 363.984375 575.621094 364.175781 576.273438 364.304688 C 576.925781 364.433594 577.585938 364.5 578.25 364.5 L 861.75 364.5 C 862.414062 364.5 863.074219 364.433594 863.726562 364.304688 C 864.378906 364.175781 865.011719 363.984375 865.625 363.730469 C 866.238281 363.476562 866.824219 363.164062 867.375 362.792969 C 867.929688 362.425781 868.4375 362.003906 868.910156 361.535156 C 869.378906 361.0625 869.800781 360.554688 870.167969 360 C 870.539062 359.449219 870.851562 358.863281 871.105469 358.25 C 871.359375 357.636719 871.550781 357.003906 871.679688 356.351562 C 871.808594 355.699219 871.875 355.039062 871.875 354.375 L 871.875 283.5 C 871.875 282.835938 871.808594 282.175781 871.679688 281.523438 C 871.550781 280.871094 871.359375 280.238281 871.105469 279.625 C 870.851562 279.011719 870.539062 278.425781 870.167969 277.875 C 869.800781 277.320312 869.378906 276.8125 868.910156 276.339844 C 868.4375 275.871094 867.929688 275.449219 867.375 275.082031 C 866.824219 274.710938 866.238281 274.398438 865.625 274.144531 C 865.011719 273.890625 864.378906 273.699219 863.726562 273.570312 C 863.074219 273.441406 862.414062 273.375 861.75 273.375 Z M 851.625 344.25 L 588.375 344.25 L 588.375 293.625 L 639 293.625 L 639 303.75 C 639 304.414062 639.066406 305.074219 639.195312 305.726562 C 639.324219 306.378906 639.515625 307.011719 639.769531 307.625 C 640.023438 308.238281 640.335938 308.824219 640.707031 309.375 C 641.074219 309.929688 641.496094 310.4375 641.964844 310.910156 C 642.4375 311.378906 642.945312 311.800781 643.5 312.167969 C 644.050781 312.539062 644.636719 312.851562 645.25 313.105469 C 645.863281 313.359375 646.496094 313.550781 647.148438 313.679688 C 647.800781 313.808594 648.460938 313.875 649.125 313.875 C 649.789062 313.875 650.449219 313.808594 651.101562 313.679688 C 651.753906 313.550781 652.386719 313.359375 653 313.105469 C 653.613281 312.851562 654.199219 312.539062 654.75 312.167969 C 655.304688 311.800781 655.8125 311.378906 656.285156 310.910156 C 656.753906 310.4375 657.175781 309.929688 657.542969 309.375 C 657.914062 308.824219 658.226562 308.238281 658.480469 307.625 C 658.734375 307.011719 658.925781 306.378906 659.054688 305.726562 C 659.183594 305.074219 659.25 304.414062 659.25 303.75 L 659.25 293.625 L 780.75 293.625 L 780.75 303.75 C 780.75 304.414062 780.816406 305.074219 780.945312 305.726562 C 781.074219 306.378906 781.265625 307.011719 781.519531 307.625 C 781.773438 308.238281 782.085938 308.824219 782.457031 309.375 C 782.824219 309.929688 783.246094 310.4375 783.714844 310.910156 C 784.1875 311.378906 784.695312 311.800781 785.25 312.167969 C 785.800781 312.539062 786.386719 312.851562 787 313.105469 C 787.613281 313.359375 788.246094 313.550781 788.898438 313.679688 C 789.550781 313.808594 790.210938 313.875 790.875 313.875 C 791.539062 313.875 792.199219 313.808594 792.851562 313.679688 C 793.503906 313.550781 794.136719 313.359375 794.75 313.105469 C 795.363281 312.851562 795.949219 312.539062 796.5 312.167969 C 797.054688 311.800781 797.5625 311.378906 798.035156 310.910156 C 798.503906 310.4375 798.925781 309.929688 799.292969 309.375 C 799.664062 308.824219 799.976562 308.238281 800.230469 307.625 C 800.484375 307.011719 800.675781 306.378906 800.804688 305.726562 C 800.933594 305.074219 801 304.414062 801 303.75 L 801 293.625 L 851.625 293.625 Z M 851.625 344.25 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;path d=&quot;M 704.40625 496.125 C 705.792969 496.105469 707.117188 495.816406 708.386719 495.253906 C 709.652344 494.691406 710.753906 493.902344 711.699219 492.886719 L 777.914062 422.011719 C 778.316406 421.515625 778.667969 420.988281 778.96875 420.429688 C 779.269531 419.871094 779.515625 419.289062 779.707031 418.679688 C 779.898438 418.074219 780.03125 417.457031 780.105469 416.824219 C 780.179688 416.195312 780.195312 415.5625 780.152344 414.925781 C 780.105469 414.292969 780.003906 413.667969 779.839844 413.054688 C 779.679688 412.441406 779.460938 411.84375 779.1875 411.273438 C 778.914062 410.699219 778.589844 410.15625 778.214844 409.644531 C 777.835938 409.128906 777.417969 408.65625 776.953125 408.222656 C 776.488281 407.789062 775.984375 407.40625 775.449219 407.066406 C 774.910156 406.726562 774.34375 406.441406 773.753906 406.210938 C 773.160156 405.976562 772.554688 405.800781 771.929688 405.683594 C 771.304688 405.566406 770.675781 405.507812 770.039062 405.507812 C 769.402344 405.507812 768.773438 405.570312 768.148438 405.6875 C 767.523438 405.808594 766.917969 405.984375 766.328125 406.21875 C 765.734375 406.453125 765.171875 406.738281 764.632812 407.078125 C 764.097656 407.417969 763.597656 407.804688 763.132812 408.238281 L 704.105469 471.421875 L 681.625 448.539062 C 681.175781 448.003906 680.675781 447.523438 680.125 447.09375 C 679.578125 446.664062 678.988281 446.296875 678.363281 445.988281 C 677.738281 445.679688 677.085938 445.4375 676.410156 445.265625 C 675.734375 445.089844 675.050781 444.988281 674.351562 444.957031 C 673.65625 444.925781 672.960938 444.964844 672.273438 445.078125 C 671.585938 445.1875 670.914062 445.367188 670.265625 445.617188 C 669.613281 445.867188 668.992188 446.183594 668.40625 446.558594 C 667.820312 446.9375 667.28125 447.371094 666.78125 447.859375 C 666.285156 448.351562 665.84375 448.886719 665.457031 449.46875 C 665.074219 450.046875 664.75 450.664062 664.492188 451.308594 C 664.230469 451.957031 664.042969 452.625 663.921875 453.3125 C 663.800781 454 663.75 454.691406 663.769531 455.386719 C 663.792969 456.085938 663.886719 456.773438 664.050781 457.453125 C 664.214844 458.128906 664.445312 458.785156 664.746094 459.414062 C 665.042969 460.042969 665.40625 460.636719 665.828125 461.191406 C 666.25 461.75 666.722656 462.253906 667.25 462.710938 L 697.625 493.085938 C 698.519531 494.003906 699.554688 494.726562 700.726562 495.25 C 701.898438 495.777344 703.125 496.066406 704.40625 496.125 Z M 704.40625 496.125 &quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/svg&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/componenets/AddMaterial.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/componenets/AddMaterial.jsx" />
              <option name="originalContent" value="import React, { useState, useEffect, useRef } from &quot;react&quot;;&#10;import { motion } from &quot;framer-motion&quot;;&#10;import { BrowserMultiFormatReader } from &quot;@zxing/library&quot;;&#10;import LoadingSpinner from &quot;./LoadingSpinner.jsx&quot;;&#10;import {&#10;  Save,&#10;  Refresh,&#10;  CheckCircle,&#10;  Error as ErrorIcon,&#10;  QrCodeScanner,&#10;  Close,&#10;} from &quot;@mui/icons-material&quot;;&#10;import api from &quot;../services/api.js&quot;;&#10;&#10;const AddMaterial = ({ open, onClose }) =&gt; {&#10;  const [materialTypes, setMaterialTypes] = useState([]);&#10;  const [isLoadingTypes, setIsLoadingTypes] = useState(true);&#10;  const [isSubmitting, setIsSubmitting] = useState(false);&#10;  const [message, setMessage] = useState({ type: &quot;&quot;, text: &quot;&quot; });&#10;  const [isScanning, setIsScanning] = useState(false);&#10;  const [cameraError, setCameraError] = useState(&quot;&quot;);&#10;&#10;  // QR Scanner refs&#10;  const videoRef = useRef(null);&#10;  const qrScannerRef = useRef(null);&#10;&#10;  const [material, setMaterial] = useState({&#10;    material_type_id: &quot;&quot;,&#10;    factory_lot_number: &quot;&quot;,&#10;    total_quantity: &quot;&quot;,&#10;    carton_count: &quot;&quot;,&#10;    items_per_carton: &quot;&quot;,&#10;    item_quantity: &quot;&quot;, // Individual item quantity (material type unit)&#10;  });&#10;&#10;  // Modal animation variants&#10;  const backdropVariants = {&#10;    hidden: { opacity: 0 },&#10;    visible: { opacity: 1 },&#10;  };&#10;&#10;  const sheetVariants = {&#10;    hidden: { y: &quot;100%&quot; },&#10;    visible: {&#10;      y: &quot;0%&quot;,&#10;      transition: {&#10;        type: &quot;spring&quot;,&#10;        damping: 25,&#10;        stiffness: 300,&#10;      },&#10;    },&#10;    exit: {&#10;      y: &quot;100%&quot;,&#10;      transition: {&#10;        type: &quot;spring&quot;,&#10;        damping: 25,&#10;        stiffness: 300,&#10;      },&#10;    },&#10;  };&#10;&#10;  // Fetch material types on component mount&#10;  useEffect(() =&gt; {&#10;    if (!open) return;&#10;&#10;    const fetchMaterialTypes = async () =&gt; {&#10;      try {&#10;        setIsLoadingTypes(true);&#10;        const response = await api.getMaterialTypes();&#10;&#10;        if (response.ok) {&#10;          const data = await response.json();&#10;          setMaterialTypes(data || []);&#10;        } else {&#10;          setMessage({ type: &quot;error&quot;, text: &quot;無法載入物料類型&quot; });&#10;        }&#10;      } catch (error) {&#10;        console.error(&quot;Error fetching material types:&quot;, error);&#10;        setMessage({ type: &quot;error&quot;, text: &quot;網絡錯誤，請重試&quot; });&#10;      } finally {&#10;        setIsLoadingTypes(false);&#10;      }&#10;    };&#10;&#10;    fetchMaterialTypes();&#10;  }, [open]);&#10;&#10;  const handleInputChange = (e) =&gt; {&#10;    const { name, value } = e.target;&#10;    setMaterial((prev) =&gt; ({&#10;      ...prev,&#10;      [name]: value,&#10;    }));&#10;    // Clear message when user types&#10;    if (message.text) setMessage({ type: &quot;&quot;, text: &quot;&quot; });&#10;    // Clear camera error when user types in the factory lot number field&#10;    if (name === &quot;factory_lot_number&quot; &amp;&amp; cameraError) setCameraError(&quot;&quot;);&#10;  };&#10;&#10;  // Calculate total quantity from cartons&#10;  const calculateTotalFromCartons = () =&gt; {&#10;    const cartonCount = parseInt(material.carton_count) || 0;&#10;    const itemsPerCarton = parseInt(material.items_per_carton) || 0;&#10;    return cartonCount * itemsPerCarton;&#10;  };&#10;&#10;  // Check if quantities match&#10;  const checkQuantitiesMatch = () =&gt; {&#10;    const total = parseFloat(material.total_quantity) || 0;&#10;    const cartons = parseInt(material.carton_count) || 0;&#10;    const itemsPerCarton = parseInt(material.items_per_carton) || 0;&#10;    const itemQuantity = parseFloat(material.item_quantity) || 0;&#10;&#10;    if (&#10;      total === 0 ||&#10;      cartons === 0 ||&#10;      itemsPerCarton === 0 ||&#10;      itemQuantity === 0&#10;    ) {&#10;      return { match: null, message: &quot;&quot; };&#10;    }&#10;&#10;    const calculatedTotal = cartons * itemsPerCarton * itemQuantity;&#10;    const match = total === calculatedTotal;&#10;    const materialUnit = materialTypes.find(&#10;      (type) =&gt; type.id === material.material_type_id,&#10;    )?.material_unit;&#10;    return {&#10;      match,&#10;      message: match&#10;        ? `數量匹配: ${total} ${materialUnit}`&#10;        : `數量不匹配: 總數量 ${total} ${materialUnit} ≠ 箱數 ${cartons} × 每箱 ${itemsPerCarton} × 每件 ${itemQuantity} ${materialUnit} = ${calculatedTotal} ${materialUnit}`,&#10;    };&#10;  };&#10;&#10;  // Get the final total quantity to submit&#10;  const getFinalQuantity = () =&gt; {&#10;    const totalQuantity = parseFloat(material.total_quantity) || 0;&#10;    const calculatedFromCartons = calculateTotalFromCartons();&#10;&#10;    // If both total and carton info are provided, use total quantity&#10;    if (totalQuantity &gt; 0) {&#10;      return totalQuantity;&#10;    }&#10;&#10;    // Otherwise use calculated from cartons&#10;    return calculatedFromCartons;&#10;  };&#10;&#10;  // Check if form is valid for submission&#10;  const isFormValid = () =&gt; {&#10;    // Check required fields&#10;    if (&#10;      !material.material_type_id ||&#10;      !material.factory_lot_number ||&#10;      !material.total_quantity ||&#10;      !material.carton_count ||&#10;      !material.items_per_carton&#10;    ) {&#10;      return false;&#10;    }&#10;&#10;    // Check if at least one quantity is provided&#10;    const total = parseFloat(material.total_quantity) || 0;&#10;    const cartons = parseInt(material.carton_count) || 0;&#10;    const itemsPerCarton = parseInt(material.items_per_carton) || 0;&#10;    const itemQuantity = parseFloat(material.item_quantity) || 0;&#10;&#10;    // Must have either total quantity OR both carton info&#10;    const hasValidQuantity =&#10;      total &gt; 0 || (cartons &gt; 0 &amp;&amp; itemsPerCarton &gt; 0 &amp;&amp; itemQuantity &gt; 0);&#10;    if (!hasValidQuantity) {&#10;      return false;&#10;    }&#10;&#10;    // If all three fields are filled, they must match&#10;    if (total &gt; 0 &amp;&amp; cartons &gt; 0 &amp;&amp; itemsPerCarton &gt; 0) {&#10;      const calculatedTotal = cartons * itemsPerCarton * itemQuantity;&#10;      return total === calculatedTotal;&#10;    }&#10;&#10;    return true;&#10;  };&#10;&#10;  const handleSubmit = async (e) =&gt; {&#10;    e.preventDefault();&#10;    setIsSubmitting(true);&#10;    setMessage({ type: &quot;&quot;, text: &quot;&quot; });&#10;&#10;    // Validation&#10;    const finalQuantity = getFinalQuantity();&#10;    if (finalQuantity &lt;= 0) {&#10;      setMessage({&#10;        type: &quot;error&quot;,&#10;        text: &quot;請輸入總數量，或同時輸入箱數和每箱件數&quot;,&#10;      });&#10;      setIsSubmitting(false);&#10;      return;&#10;    }&#10;&#10;    try {&#10;      const body = {&#10;        material_type_id: material.material_type_id,&#10;        factory_lot_number: material.factory_lot_number,&#10;        total_quantity: finalQuantity,&#10;        carton_count: parseInt(material.carton_count) || null,&#10;        items_per_carton: parseInt(material.items_per_carton) || null,&#10;        item_quantity: parseFloat(material.item_quantity) || null, // Individual item quantity&#10;      };&#10;      const response = await api.postAddLot(body);&#10;&#10;      const data = await response.json();&#10;&#10;      if (response.ok) {&#10;        setMessage({ type: &quot;success&quot;, text: &quot;批次添加成功！&quot; });&#10;        // Reset form after successful submission&#10;        setTimeout(() =&gt; {&#10;          handleReset();&#10;          onClose(); // Close modal after successful submission&#10;        }, 2000);&#10;      } else {&#10;        setMessage({ type: &quot;error&quot;, text: data.message || &quot;添加失敗&quot; });&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error adding lot:&quot;, error);&#10;      setMessage({ type: &quot;error&quot;, text: &quot;網絡錯誤，請重試&quot; });&#10;    } finally {&#10;      setIsSubmitting(false);&#10;    }&#10;  };&#10;&#10;  const handleReset = () =&gt; {&#10;    setMaterial({&#10;      material_type_id: &quot;&quot;,&#10;      factory_lot_number: &quot;&quot;,&#10;      total_quantity: &quot;&quot;,&#10;      carton_count: &quot;&quot;,&#10;      items_per_carton: &quot;&quot;,&#10;      item_quantity: &quot;&quot;, // Individual item quantity (material type unit)&#10;    });&#10;    setMessage({ type: &quot;&quot;, text: &quot;&quot; });&#10;    setCameraError(&quot;&quot;);&#10;  };&#10;&#10;  // QR/Barcode scanning functions&#10;  const startScanning = () =&gt; {&#10;    setCameraError(&quot;&quot;);&#10;    setIsScanning(true);&#10;  };&#10;&#10;  const stopScanning = () =&gt; {&#10;    if (qrScannerRef.current) {&#10;      qrScannerRef.current.reset();&#10;    }&#10;    setIsScanning(false);&#10;  };&#10;&#10;  // Effect to initialize scanner when modal opens&#10;  useEffect(() =&gt; {&#10;    if (isScanning &amp;&amp; videoRef.current) {&#10;      const initScanner = async () =&gt; {&#10;        try {&#10;          const codeReader = new BrowserMultiFormatReader();&#10;          qrScannerRef.current = codeReader;&#10;&#10;          // Start decoding from video device&#10;          await codeReader.decodeFromVideoDevice(&#10;            undefined, // Use default camera&#10;            videoRef.current,&#10;            (result, err) =&gt; {&#10;              if (result) {&#10;                setMaterial((prev) =&gt; ({&#10;                  ...prev,&#10;                  factory_lot_number: result.getText(),&#10;                }));&#10;                setIsScanning(false);&#10;              }&#10;              if (err &amp;&amp; err.name !== &quot;NotFoundException&quot;) {&#10;                console.error(&quot;Scanner error:&quot;, err);&#10;              }&#10;            },&#10;          );&#10;        } catch (error) {&#10;          console.error(&quot;Failed to start scanner:&quot;, error);&#10;          setCameraError(&quot;無法啟動相機。請檢查權限設置。&quot;);&#10;          setIsScanning(false);&#10;        }&#10;      };&#10;&#10;      initScanner();&#10;    }&#10;&#10;    // Cleanup function&#10;    return () =&gt; {&#10;      if (qrScannerRef.current) {&#10;        qrScannerRef.current.reset();&#10;      }&#10;    };&#10;  }, [isScanning]);&#10;&#10;  return (&#10;    &lt;motion.div&#10;      className=&quot;fixed inset-0 z-50&quot;&#10;      initial=&quot;hidden&quot;&#10;      animate=&quot;visible&quot;&#10;      exit=&quot;hidden&quot;&#10;      variants={backdropVariants}&#10;      transition={{ duration: 0.2 }}&#10;    &gt;&#10;      {/* Backdrop - Full screen coverage */}&#10;      &lt;div className=&quot;absolute inset-0 bg-black/30&quot; onClick={onClose} /&gt;&#10;&#10;      {/* Bottom Sheet */}&#10;      &lt;motion.div&#10;        className=&quot;absolute right-0 bottom-0 left-0 h-[80%] rounded-t-3xl bg-white&quot;&#10;        variants={sheetVariants}&#10;        initial=&quot;hidden&quot;&#10;        animate=&quot;visible&quot;&#10;        exit=&quot;exit&quot;&#10;        onClick={(e) =&gt; e.stopPropagation()} // Prevent backdrop click when clicking on sheet&#10;      &gt;&#10;        {/* Handle */}&#10;        &lt;div className=&quot;absolute top-2 left-1/2 -translate-x-1/2&quot;&gt;&#10;          &lt;div className=&quot;h-1 w-12 rounded-full bg-gray-300&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Close Button */}&#10;        &lt;button&#10;          onClick={onClose}&#10;          className=&quot;absolute top-4 right-4 rounded-full p-2 transition-colors hover:bg-gray-100&quot;&#10;        &gt;&#10;          &lt;Close className=&quot;h-5 w-5 text-gray-600&quot; /&gt;&#10;        &lt;/button&gt;&#10;&#10;        {/* Content */}&#10;        &lt;div className=&quot;h-full overflow-y-auto px-6 pt-8 pb-6&quot;&gt;&#10;          &lt;div className=&quot;space-y-6&quot;&gt;&#10;            &lt;h2 className=&quot;mb-4 text-xl font-bold text-gray-800&quot;&gt;新增物料&lt;/h2&gt;&#10;&#10;            {/* Show loading spinner when initially loading material types */}&#10;            {isLoadingTypes &amp;&amp; (&#10;              &lt;div className=&quot;flex items-center justify-center py-8&quot;&gt;&#10;                &lt;LoadingSpinner&#10;                  variant=&quot;circular&quot;&#10;                  size={30}&#10;                  message=&quot;載入物料類型中...&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Show backdrop loading during form submission */}&#10;            {isSubmitting &amp;&amp; (&#10;              &lt;div className=&quot;absolute inset-0 z-10 flex items-center justify-center bg-black/20&quot;&gt;&#10;                &lt;LoadingSpinner&#10;                  variant=&quot;circular&quot;&#10;                  size={40}&#10;                  message=&quot;添加物料中...&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {!isLoadingTypes &amp;&amp; (&#10;              &lt;&gt;&#10;                {/* Message Display */}&#10;                {message.text &amp;&amp; (&#10;                  &lt;div&#10;                    className={`rounded-xl p-4 ${&#10;                      message.type === &quot;success&quot;&#10;                        ? &quot;border border-green-200 bg-green-50 text-green-700&quot;&#10;                        : &quot;border border-red-200 bg-red-50 text-red-700&quot;&#10;                    }`}&#10;                  &gt;&#10;                    &lt;div className=&quot;flex items-center&quot;&gt;&#10;                      {message.type === &quot;success&quot; ? (&#10;                        &lt;CheckCircle className=&quot;mr-2 h-5 w-5&quot; /&gt;&#10;                      ) : (&#10;                        &lt;ErrorIcon className=&quot;mr-2 h-5 w-5&quot; /&gt;&#10;                      )}&#10;                      {message.text}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                &lt;form onSubmit={handleSubmit} className=&quot;space-y-4&quot;&gt;&#10;                  {/* Material Type */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;mb-1 block text-sm font-medium text-gray-700&quot;&gt;&#10;                      物料類型 *&#10;                    &lt;/label&gt;&#10;                    &lt;select&#10;                      name=&quot;material_type_id&quot;&#10;                      required&#10;                      className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                      value={material.material_type_id}&#10;                      onChange={handleInputChange}&#10;                      disabled={isLoadingTypes}&#10;                    &gt;&#10;                      &lt;option value=&quot;&quot;&gt;選擇物料類型&lt;/option&gt;&#10;                      {materialTypes.map((type) =&gt; (&#10;                        &lt;option key={type.id} value={type.id}&gt;&#10;                          {type.material_name}&#10;                        &lt;/option&gt;&#10;                      ))}&#10;                    &lt;/select&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Factory Lot Number */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;mb-1 block text-sm font-medium text-gray-700&quot;&gt;&#10;                      工廠批次號 *&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;text&quot;&#10;                        name=&quot;factory_lot_number&quot;&#10;                        required&#10;                        className=&quot;flex-1 rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                        placeholder=&quot;輸入工廠批次號&quot;&#10;                        value={material.factory_lot_number}&#10;                        onChange={handleInputChange}&#10;                      /&gt;&#10;                      &lt;button&#10;                        type=&quot;button&quot;&#10;                        onClick={isScanning ? stopScanning : startScanning}&#10;                        className={`flex h-10 w-10 items-center justify-center rounded-full transition-all duration-200 ${&#10;                          isScanning&#10;                            ? &quot;bg-red-500 text-white hover:bg-red-600&quot;&#10;                            : &quot;bg-blue text-white hover:bg-blue-600&quot;&#10;                        }`}&#10;                        disabled={isSubmitting}&#10;                        title={isScanning ? &quot;停止掃描&quot; : &quot;掃描QR碼&quot;}&#10;                      &gt;&#10;                        {isScanning ? (&#10;                          &lt;Close className=&quot;h-5 w-5&quot; /&gt;&#10;                        ) : (&#10;                          &lt;QrCodeScanner className=&quot;h-5 w-5&quot; /&gt;&#10;                        )}&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                    {/* Camera Error Display */}&#10;                    {cameraError &amp;&amp; (&#10;                      &lt;div className=&quot;mt-2 flex items-center text-sm text-red-600&quot;&gt;&#10;                        &lt;ErrorIcon className=&quot;mr-1 h-4 w-4&quot; /&gt;&#10;                        {cameraError}&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quantity Inputs */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;mb-2 block text-sm font-medium text-gray-700&quot;&gt;&#10;                      數量設置 *&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#10;                      {/* Total Quantity */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;mb-1 block text-xs text-gray-600&quot;&gt;&#10;                          總數量&#10;                          {material.material_type_id &amp;&amp;&#10;                            materialTypes.find(&#10;                              (type) =&gt; type.id === material.material_type_id,&#10;                            )?.material_unit &amp;&amp;&#10;                            ` (${&#10;                              materialTypes.find(&#10;                                (type) =&gt; type.id === material.material_type_id,&#10;                              )?.material_unit&#10;                            })`}&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          name=&quot;total_quantity&quot;&#10;                          className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                          placeholder=&quot;輸入總數量&quot;&#10;                          value={material.total_quantity}&#10;                          onChange={handleInputChange}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Carton Count */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;mb-1 block text-xs text-gray-600&quot;&gt;&#10;                          箱數&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          name=&quot;carton_count&quot;&#10;                          className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                          placeholder=&quot;輸入箱數&quot;&#10;                          value={material.carton_count}&#10;                          onChange={handleInputChange}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Items Per Carton */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;mb-1 block text-xs text-gray-600&quot;&gt;&#10;                          每箱件數&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          name=&quot;items_per_carton&quot;&#10;                          className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                          placeholder=&quot;輸入每箱件數&quot;&#10;                          value={material.items_per_carton}&#10;                          onChange={handleInputChange}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Item Quantity */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;mb-1 block text-xs text-gray-600&quot;&gt;&#10;                          單項數量&#10;                          {material.material_type_id &amp;&amp;&#10;                            materialTypes.find(&#10;                              (type) =&gt; type.id === material.material_type_id,&#10;                            )?.material_unit &amp;&amp;&#10;                            ` (${&#10;                              materialTypes.find(&#10;                                (type) =&gt; type.id === material.material_type_id,&#10;                              )?.material_unit&#10;                            })`}&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          name=&quot;item_quantity&quot;&#10;                          step=&quot;0.01&quot;&#10;                          className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                          placeholder=&quot;輸入每個物料項目的數量&quot;&#10;                          value={material.item_quantity}&#10;                          onChange={handleInputChange}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Quantity Match Display */}&#10;                    &lt;div className=&quot;mt-2 text-sm&quot;&gt;&#10;                      &lt;span&#10;                        className={`rounded-lg px-3 py-1 transition-opacity ${&#10;                          checkQuantitiesMatch().match !== null&#10;                            ? &quot;visible&quot;&#10;                            : &quot;invisible&quot;&#10;                        } ${&#10;                          checkQuantitiesMatch().match&#10;                            ? &quot;bg-green-50 text-green-700&quot;&#10;                            : &quot;bg-red-50 text-red-700&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {checkQuantitiesMatch().message}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;flex items-center justify-center space-x-3 pt-4&quot;&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      onClick={handleReset}&#10;                      className=&quot;flex w-1/3 items-center justify-center gap-2 rounded-xl bg-gray-500 px-4 py-2 font-medium text-white transition-colors duration-200 hover:bg-gray-600&quot;&#10;                      disabled={isSubmitting}&#10;                    &gt;&#10;                      &lt;Refresh className=&quot;h-4 w-4&quot; /&gt;&#10;                      重置&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      type=&quot;submit&quot;&#10;                      className=&quot;bg-blue flex w-2/3 items-center justify-center gap-2 rounded-xl px-4 py-2 font-medium text-white transition-colors duration-200 hover:bg-blue-700 disabled:cursor-not-allowed disabled:opacity-50&quot;&#10;                      disabled={&#10;                        isSubmitting || isLoadingTypes || !isFormValid()&#10;                      }&#10;                    &gt;&#10;                      {isSubmitting ? (&#10;                        &lt;LoadingSpinner variant=&quot;dots&quot; message=&quot;&quot; /&gt;&#10;                      ) : (&#10;                        &lt;Save className=&quot;h-4 w-4&quot; /&gt;&#10;                      )}&#10;                      {isSubmitting ? &quot;添加中...&quot; : &quot;添加物料&quot;}&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/form&gt;&#10;              &lt;/&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;&#10;      {/* QR Scanner Modal */}&#10;      {isScanning &amp;&amp; (&#10;        &lt;motion.div&#10;          className=&quot;bg-opacity-75 fixed inset-0 z-60 flex items-center justify-center bg-black&quot;&#10;          initial={{ opacity: 0 }}&#10;          animate={{ opacity: 1 }}&#10;          exit={{ opacity: 0 }}&#10;        &gt;&#10;          &lt;div className=&quot;relative mx-4 w-full max-w-md&quot;&gt;&#10;            &lt;motion.div&#10;              className=&quot;rounded-2xl bg-white p-6 shadow-2xl&quot;&#10;              initial={{ scale: 0.8, opacity: 0 }}&#10;              animate={{ scale: 1, opacity: 1 }}&#10;              exit={{ scale: 0.8, opacity: 0 }}&#10;            &gt;&#10;              &lt;div className=&quot;mb-4 flex items-center justify-between&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                  掃描QR碼/條碼&#10;                &lt;/h3&gt;&#10;                &lt;button&#10;                  onClick={stopScanning}&#10;                  className=&quot;flex h-8 w-8 items-center justify-center rounded-full bg-gray-200 transition-colors duration-200 hover:bg-gray-300&quot;&#10;                &gt;&#10;                  &lt;Close className=&quot;h-4 w-4&quot; /&gt;&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;relative overflow-hidden rounded-xl bg-gray-100&quot;&gt;&#10;                &lt;video&#10;                  ref={videoRef}&#10;                  className=&quot;h-64 w-full object-cover&quot;&#10;                  playsInline&#10;                /&gt;&#10;                &lt;div className=&quot;absolute inset-0 border-2 border-dashed border-blue-500 opacity-50&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;p className=&quot;mt-4 text-center text-sm text-gray-600&quot;&gt;&#10;                將QR碼或條碼對準相機進行掃描&#10;              &lt;/p&gt;&#10;            &lt;/motion.div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/motion.div&gt;&#10;      )}&#10;    &lt;/motion.div&gt;&#10;  );&#10;};&#10;&#10;export default AddMaterial;&#10;" />
              <option name="updatedContent" value="import React, { useState, useEffect, useRef } from &quot;react&quot;;&#10;import { motion } from &quot;framer-motion&quot;;&#10;import { BrowserMultiFormatReader } from &quot;@zxing/library&quot;;&#10;import LoadingSpinner from &quot;./LoadingSpinner.jsx&quot;;&#10;import {&#10;  Save,&#10;  Refresh,&#10;  CheckCircle,&#10;  Error as ErrorIcon,&#10;  QrCodeScanner,&#10;  Close,&#10;} from &quot;@mui/icons-material&quot;;&#10;import api from &quot;../services/api.js&quot;;&#10;&#10;const AddMaterial = ({ open, onClose, onSuccess }) =&gt; {&#10;  const [materialTypes, setMaterialTypes] = useState([]);&#10;  const [isLoadingTypes, setIsLoadingTypes] = useState(true);&#10;  const [isSubmitting, setIsSubmitting] = useState(false);&#10;  const [message, setMessage] = useState({ type: &quot;&quot;, text: &quot;&quot; });&#10;  const [isScanning, setIsScanning] = useState(false);&#10;  const [cameraError, setCameraError] = useState(&quot;&quot;);&#10;&#10;  // QR Scanner refs&#10;  const videoRef = useRef(null);&#10;  const qrScannerRef = useRef(null);&#10;&#10;  const [material, setMaterial] = useState({&#10;    material_type_id: &quot;&quot;,&#10;    factory_lot_number: &quot;&quot;,&#10;    total_quantity: &quot;&quot;,&#10;    carton_count: &quot;&quot;,&#10;    items_per_carton: &quot;&quot;,&#10;    item_quantity: &quot;&quot;, // Individual item quantity (material type unit)&#10;  });&#10;&#10;  // Modal animation variants&#10;  const backdropVariants = {&#10;    hidden: { opacity: 0 },&#10;    visible: { opacity: 1 },&#10;  };&#10;&#10;  const sheetVariants = {&#10;    hidden: { y: &quot;100%&quot; },&#10;    visible: {&#10;      y: &quot;0%&quot;,&#10;      transition: {&#10;        type: &quot;spring&quot;,&#10;        damping: 25,&#10;        stiffness: 300,&#10;      },&#10;    },&#10;    exit: {&#10;      y: &quot;100%&quot;,&#10;      transition: {&#10;        type: &quot;spring&quot;,&#10;        damping: 25,&#10;        stiffness: 300,&#10;      },&#10;    },&#10;  };&#10;&#10;  // Fetch material types on component mount&#10;  useEffect(() =&gt; {&#10;    if (!open) return;&#10;&#10;    const fetchMaterialTypes = async () =&gt; {&#10;      try {&#10;        setIsLoadingTypes(true);&#10;        const response = await api.getMaterialTypes();&#10;&#10;        if (response.ok) {&#10;          const data = await response.json();&#10;          setMaterialTypes(data || []);&#10;        } else {&#10;          setMessage({ type: &quot;error&quot;, text: &quot;無法載入物料類型&quot; });&#10;        }&#10;      } catch (error) {&#10;        console.error(&quot;Error fetching material types:&quot;, error);&#10;        setMessage({ type: &quot;error&quot;, text: &quot;網絡錯誤，請重試&quot; });&#10;      } finally {&#10;        setIsLoadingTypes(false);&#10;      }&#10;    };&#10;&#10;    fetchMaterialTypes();&#10;  }, [open]);&#10;&#10;  const handleInputChange = (e) =&gt; {&#10;    const { name, value } = e.target;&#10;    setMaterial((prev) =&gt; ({&#10;      ...prev,&#10;      [name]: value,&#10;    }));&#10;    // Clear message when user types&#10;    if (message.text) setMessage({ type: &quot;&quot;, text: &quot;&quot; });&#10;    // Clear camera error when user types in the factory lot number field&#10;    if (name === &quot;factory_lot_number&quot; &amp;&amp; cameraError) setCameraError(&quot;&quot;);&#10;  };&#10;&#10;  // Calculate total quantity from cartons&#10;  const calculateTotalFromCartons = () =&gt; {&#10;    const cartonCount = parseInt(material.carton_count) || 0;&#10;    const itemsPerCarton = parseInt(material.items_per_carton) || 0;&#10;    return cartonCount * itemsPerCarton;&#10;  };&#10;&#10;  // Check if quantities match&#10;  const checkQuantitiesMatch = () =&gt; {&#10;    const total = parseFloat(material.total_quantity) || 0;&#10;    const cartons = parseInt(material.carton_count) || 0;&#10;    const itemsPerCarton = parseInt(material.items_per_carton) || 0;&#10;    const itemQuantity = parseFloat(material.item_quantity) || 0;&#10;&#10;    if (&#10;      total === 0 ||&#10;      cartons === 0 ||&#10;      itemsPerCarton === 0 ||&#10;      itemQuantity === 0&#10;    ) {&#10;      return { match: null, message: &quot;&quot; };&#10;    }&#10;&#10;    const calculatedTotal = cartons * itemsPerCarton * itemQuantity;&#10;    const match = total === calculatedTotal;&#10;    const materialUnit = materialTypes.find(&#10;      (type) =&gt; type.id === material.material_type_id,&#10;    )?.material_unit;&#10;    return {&#10;      match,&#10;      message: match&#10;        ? `數量匹配: ${total} ${materialUnit}`&#10;        : `數量不匹配: 總數量 ${total} ${materialUnit} ≠ 箱數 ${cartons} × 每箱 ${itemsPerCarton} × 每件 ${itemQuantity} ${materialUnit} = ${calculatedTotal} ${materialUnit}`,&#10;    };&#10;  };&#10;&#10;  // Get the final total quantity to submit&#10;  const getFinalQuantity = () =&gt; {&#10;    const totalQuantity = parseFloat(material.total_quantity) || 0;&#10;    const calculatedFromCartons = calculateTotalFromCartons();&#10;&#10;    // If both total and carton info are provided, use total quantity&#10;    if (totalQuantity &gt; 0) {&#10;      return totalQuantity;&#10;    }&#10;&#10;    // Otherwise use calculated from cartons&#10;    return calculatedFromCartons;&#10;  };&#10;&#10;  // Check if form is valid for submission&#10;  const isFormValid = () =&gt; {&#10;    // Check required fields&#10;    if (&#10;      !material.material_type_id ||&#10;      !material.factory_lot_number ||&#10;      !material.total_quantity ||&#10;      !material.carton_count ||&#10;      !material.items_per_carton&#10;    ) {&#10;      return false;&#10;    }&#10;&#10;    // Check if at least one quantity is provided&#10;    const total = parseFloat(material.total_quantity) || 0;&#10;    const cartons = parseInt(material.carton_count) || 0;&#10;    const itemsPerCarton = parseInt(material.items_per_carton) || 0;&#10;    const itemQuantity = parseFloat(material.item_quantity) || 0;&#10;&#10;    // Must have either total quantity OR both carton info&#10;    const hasValidQuantity =&#10;      total &gt; 0 || (cartons &gt; 0 &amp;&amp; itemsPerCarton &gt; 0 &amp;&amp; itemQuantity &gt; 0);&#10;    if (!hasValidQuantity) {&#10;      return false;&#10;    }&#10;&#10;    // If all three fields are filled, they must match&#10;    if (total &gt; 0 &amp;&amp; cartons &gt; 0 &amp;&amp; itemsPerCarton &gt; 0) {&#10;      const calculatedTotal = cartons * itemsPerCarton * itemQuantity;&#10;      return total === calculatedTotal;&#10;    }&#10;&#10;    return true;&#10;  };&#10;&#10;  const handleSubmit = async (e) =&gt; {&#10;    e.preventDefault();&#10;    setIsSubmitting(true);&#10;    setMessage({ type: &quot;&quot;, text: &quot;&quot; });&#10;&#10;    // Validation&#10;    const finalQuantity = getFinalQuantity();&#10;    if (finalQuantity &lt;= 0) {&#10;      setMessage({&#10;        type: &quot;error&quot;,&#10;        text: &quot;請輸入總數量，或同時輸入箱數和每箱件數&quot;,&#10;      });&#10;      setIsSubmitting(false);&#10;      return;&#10;    }&#10;&#10;    try {&#10;      const body = {&#10;        material_type_id: material.material_type_id,&#10;        factory_lot_number: material.factory_lot_number,&#10;        total_quantity: finalQuantity,&#10;        carton_count: parseInt(material.carton_count) || null,&#10;        items_per_carton: parseInt(material.items_per_carton) || null,&#10;        item_quantity: parseFloat(material.item_quantity) || null, // Individual item quantity&#10;      };&#10;      const response = await api.postAddLot(body);&#10;&#10;      const data = await response.json();&#10;&#10;      if (response.ok) {&#10;        setMessage({ type: &quot;success&quot;, text: &quot;批次添加成功！&quot; });&#10;        if (onSuccess) onSuccess();&#10;        // Reset form after successful submission&#10;        setTimeout(() =&gt; {&#10;          handleReset();&#10;          onClose(); // Close modal after successful submission&#10;        }, 2000);&#10;      } else {&#10;        setMessage({ type: &quot;error&quot;, text: data.message || &quot;添加失敗&quot; });&#10;      }&#10;    } catch (error) {&#10;      console.error(&quot;Error adding lot:&quot;, error);&#10;      setMessage({ type: &quot;error&quot;, text: &quot;網絡錯誤，請重試&quot; });&#10;    } finally {&#10;      setIsSubmitting(false);&#10;    }&#10;  };&#10;&#10;  const handleReset = () =&gt; {&#10;    setMaterial({&#10;      material_type_id: &quot;&quot;,&#10;      factory_lot_number: &quot;&quot;,&#10;      total_quantity: &quot;&quot;,&#10;      carton_count: &quot;&quot;,&#10;      items_per_carton: &quot;&quot;,&#10;      item_quantity: &quot;&quot;, // Individual item quantity (material type unit)&#10;    });&#10;    setMessage({ type: &quot;&quot;, text: &quot;&quot; });&#10;    setCameraError(&quot;&quot;);&#10;  };&#10;&#10;  // QR/Barcode scanning functions&#10;  const startScanning = () =&gt; {&#10;    setCameraError(&quot;&quot;);&#10;    setIsScanning(true);&#10;  };&#10;&#10;  const stopScanning = () =&gt; {&#10;    if (qrScannerRef.current) {&#10;      qrScannerRef.current.reset();&#10;    }&#10;    setIsScanning(false);&#10;  };&#10;&#10;  // Effect to initialize scanner when modal opens&#10;  useEffect(() =&gt; {&#10;    if (isScanning &amp;&amp; videoRef.current) {&#10;      const initScanner = async () =&gt; {&#10;        try {&#10;          const codeReader = new BrowserMultiFormatReader();&#10;          qrScannerRef.current = codeReader;&#10;&#10;          // Start decoding from video device&#10;          await codeReader.decodeFromVideoDevice(&#10;            undefined, // Use default camera&#10;            videoRef.current,&#10;            (result, err) =&gt; {&#10;              if (result) {&#10;                setMaterial((prev) =&gt; ({&#10;                  ...prev,&#10;                  factory_lot_number: result.getText(),&#10;                }));&#10;                setIsScanning(false);&#10;              }&#10;              if (err &amp;&amp; err.name !== &quot;NotFoundException&quot;) {&#10;                console.error(&quot;Scanner error:&quot;, err);&#10;              }&#10;            },&#10;          );&#10;        } catch (error) {&#10;          console.error(&quot;Failed to start scanner:&quot;, error);&#10;          setCameraError(&quot;無法啟動相機。請檢查權限設置。&quot;);&#10;          setIsScanning(false);&#10;        }&#10;      };&#10;&#10;      initScanner();&#10;    }&#10;&#10;    // Cleanup function&#10;    return () =&gt; {&#10;      if (qrScannerRef.current) {&#10;        qrScannerRef.current.reset();&#10;      }&#10;    };&#10;  }, [isScanning]);&#10;&#10;  return (&#10;    &lt;motion.div&#10;      className=&quot;fixed inset-0 z-50&quot;&#10;      initial=&quot;hidden&quot;&#10;      animate=&quot;visible&quot;&#10;      exit=&quot;hidden&quot;&#10;      variants={backdropVariants}&#10;      transition={{ duration: 0.2 }}&#10;    &gt;&#10;      {/* Backdrop - Full screen coverage */}&#10;      &lt;div className=&quot;absolute inset-0 bg-black/30&quot; onClick={onClose} /&gt;&#10;&#10;      {/* Bottom Sheet */}&#10;      &lt;motion.div&#10;        className=&quot;absolute right-0 bottom-0 left-0 h-[80%] rounded-t-3xl bg-white&quot;&#10;        variants={sheetVariants}&#10;        initial=&quot;hidden&quot;&#10;        animate=&quot;visible&quot;&#10;        exit=&quot;exit&quot;&#10;        onClick={(e) =&gt; e.stopPropagation()} // Prevent backdrop click when clicking on sheet&#10;      &gt;&#10;        {/* Handle */}&#10;        &lt;div className=&quot;absolute top-2 left-1/2 -translate-x-1/2&quot;&gt;&#10;          &lt;div className=&quot;h-1 w-12 rounded-full bg-gray-300&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        {/* Close Button */}&#10;        &lt;button&#10;          onClick={onClose}&#10;          className=&quot;absolute top-4 right-4 rounded-full p-2 transition-colors hover:bg-gray-100&quot;&#10;        &gt;&#10;          &lt;Close className=&quot;h-5 w-5 text-gray-600&quot; /&gt;&#10;        &lt;/button&gt;&#10;&#10;        {/* Content */}&#10;        &lt;div className=&quot;h-full overflow-y-auto px-6 pt-8 pb-6&quot;&gt;&#10;          &lt;div className=&quot;space-y-6&quot;&gt;&#10;            &lt;h2 className=&quot;mb-4 text-xl font-bold text-gray-800&quot;&gt;新增物料&lt;/h2&gt;&#10;&#10;            {/* Show loading spinner when initially loading material types */}&#10;            {isLoadingTypes &amp;&amp; (&#10;              &lt;div className=&quot;flex items-center justify-center py-8&quot;&gt;&#10;                &lt;LoadingSpinner&#10;                  variant=&quot;circular&quot;&#10;                  size={30}&#10;                  message=&quot;載入物料類型中...&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {/* Show backdrop loading during form submission */}&#10;            {isSubmitting &amp;&amp; (&#10;              &lt;div className=&quot;absolute inset-0 z-10 flex items-center justify-center bg-black/20&quot;&gt;&#10;                &lt;LoadingSpinner&#10;                  variant=&quot;circular&quot;&#10;                  size={40}&#10;                  message=&quot;添加物料中...&quot;&#10;                /&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            {!isLoadingTypes &amp;&amp; (&#10;              &lt;&gt;&#10;                {/* Message Display */}&#10;                {message.text &amp;&amp; (&#10;                  &lt;div&#10;                    className={`rounded-xl p-4 ${&#10;                      message.type === &quot;success&quot;&#10;                        ? &quot;border border-green-200 bg-green-50 text-green-700&quot;&#10;                        : &quot;border border-red-200 bg-red-50 text-red-700&quot;&#10;                    }`}&#10;                  &gt;&#10;                    &lt;div className=&quot;flex items-center&quot;&gt;&#10;                      {message.type === &quot;success&quot; ? (&#10;                        &lt;CheckCircle className=&quot;mr-2 h-5 w-5&quot; /&gt;&#10;                      ) : (&#10;                        &lt;ErrorIcon className=&quot;mr-2 h-5 w-5&quot; /&gt;&#10;                      )}&#10;                      {message.text}&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;&#10;                &lt;form onSubmit={handleSubmit} className=&quot;space-y-4&quot;&gt;&#10;                  {/* Material Type */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;mb-1 block text-sm font-medium text-gray-700&quot;&gt;&#10;                      物料類型 *&#10;                    &lt;/label&gt;&#10;                    &lt;select&#10;                      name=&quot;material_type_id&quot;&#10;                      required&#10;                      className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                      value={material.material_type_id}&#10;                      onChange={handleInputChange}&#10;                      disabled={isLoadingTypes}&#10;                    &gt;&#10;                      &lt;option value=&quot;&quot;&gt;選擇物料類型&lt;/option&gt;&#10;                      {materialTypes.map((type) =&gt; (&#10;                        &lt;option key={type.id} value={type.id}&gt;&#10;                          {type.material_name}&#10;                        &lt;/option&gt;&#10;                      ))}&#10;                    &lt;/select&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Factory Lot Number */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;mb-1 block text-sm font-medium text-gray-700&quot;&gt;&#10;                      工廠批次號 *&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;text&quot;&#10;                        name=&quot;factory_lot_number&quot;&#10;                        required&#10;                        className=&quot;flex-1 rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                        placeholder=&quot;輸入工廠批次號&quot;&#10;                        value={material.factory_lot_number}&#10;                        onChange={handleInputChange}&#10;                      /&gt;&#10;                      &lt;button&#10;                        type=&quot;button&quot;&#10;                        onClick={isScanning ? stopScanning : startScanning}&#10;                        className={`flex h-10 w-10 items-center justify-center rounded-full transition-all duration-200 ${&#10;                          isScanning&#10;                            ? &quot;bg-red-500 text-white hover:bg-red-600&quot;&#10;                            : &quot;bg-blue text-white hover:bg-blue-600&quot;&#10;                        }`}&#10;                        disabled={isSubmitting}&#10;                        title={isScanning ? &quot;停止掃描&quot; : &quot;掃描QR碼&quot;}&#10;                      &gt;&#10;                        {isScanning ? (&#10;                          &lt;Close className=&quot;h-5 w-5&quot; /&gt;&#10;                        ) : (&#10;                          &lt;QrCodeScanner className=&quot;h-5 w-5&quot; /&gt;&#10;                        )}&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                    {/* Camera Error Display */}&#10;                    {cameraError &amp;&amp; (&#10;                      &lt;div className=&quot;mt-2 flex items-center text-sm text-red-600&quot;&gt;&#10;                        &lt;ErrorIcon className=&quot;mr-1 h-4 w-4&quot; /&gt;&#10;                        {cameraError}&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Quantity Inputs */}&#10;                  &lt;div&gt;&#10;                    &lt;label className=&quot;mb-2 block text-sm font-medium text-gray-700&quot;&gt;&#10;                      數量設置 *&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#10;                      {/* Total Quantity */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;mb-1 block text-xs text-gray-600&quot;&gt;&#10;                          總數量&#10;                          {material.material_type_id &amp;&amp;&#10;                            materialTypes.find(&#10;                              (type) =&gt; type.id === material.material_type_id,&#10;                            )?.material_unit &amp;&amp;&#10;                            ` (${&#10;                              materialTypes.find(&#10;                                (type) =&gt; type.id === material.material_type_id,&#10;                              )?.material_unit&#10;                            })`}&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          name=&quot;total_quantity&quot;&#10;                          className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                          placeholder=&quot;輸入總數量&quot;&#10;                          value={material.total_quantity}&#10;                          onChange={handleInputChange}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Carton Count */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;mb-1 block text-xs text-gray-600&quot;&gt;&#10;                          箱數&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          name=&quot;carton_count&quot;&#10;                          className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                          placeholder=&quot;輸入箱數&quot;&#10;                          value={material.carton_count}&#10;                          onChange={handleInputChange}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Items Per Carton */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;mb-1 block text-xs text-gray-600&quot;&gt;&#10;                          每箱件數&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          name=&quot;items_per_carton&quot;&#10;                          className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                          placeholder=&quot;輸入每箱件數&quot;&#10;                          value={material.items_per_carton}&#10;                          onChange={handleInputChange}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      {/* Item Quantity */}&#10;                      &lt;div&gt;&#10;                        &lt;label className=&quot;mb-1 block text-xs text-gray-600&quot;&gt;&#10;                          單項數量&#10;                          {material.material_type_id &amp;&amp;&#10;                            materialTypes.find(&#10;                              (type) =&gt; type.id === material.material_type_id,&#10;                            )?.material_unit &amp;&amp;&#10;                            ` (${&#10;                              materialTypes.find(&#10;                                (type) =&gt; type.id === material.material_type_id,&#10;                              )?.material_unit&#10;                            })`}&#10;                        &lt;/label&gt;&#10;                        &lt;input&#10;                          type=&quot;number&quot;&#10;                          name=&quot;item_quantity&quot;&#10;                          step=&quot;0.01&quot;&#10;                          className=&quot;w-full rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:outline-none&quot;&#10;                          placeholder=&quot;輸入每個物料項目的數量&quot;&#10;                          value={material.item_quantity}&#10;                          onChange={handleInputChange}&#10;                        /&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    {/* Quantity Match Display */}&#10;                    &lt;div className=&quot;mt-2 text-sm&quot;&gt;&#10;                      &lt;span&#10;                        className={`rounded-lg px-3 py-1 transition-opacity ${&#10;                          checkQuantitiesMatch().match !== null&#10;                            ? &quot;visible&quot;&#10;                            : &quot;invisible&quot;&#10;                        } ${&#10;                          checkQuantitiesMatch().match&#10;                            ? &quot;bg-green-50 text-green-700&quot;&#10;                            : &quot;bg-red-50 text-red-700&quot;&#10;                        }`}&#10;                      &gt;&#10;                        {checkQuantitiesMatch().message}&#10;                      &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  {/* Action Buttons */}&#10;                  &lt;div className=&quot;flex items-center justify-center space-x-3 pt-4&quot;&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      onClick={handleReset}&#10;                      className=&quot;flex w-1/3 items-center justify-center gap-2 rounded-xl bg-gray-500 px-4 py-2 font-medium text-white transition-colors duration-200 hover:bg-gray-600&quot;&#10;                      disabled={isSubmitting}&#10;                    &gt;&#10;                      &lt;Refresh className=&quot;h-4 w-4&quot; /&gt;&#10;                      重置&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      type=&quot;submit&quot;&#10;                      className=&quot;bg-blue flex w-2/3 items-center justify-center gap-2 rounded-xl px-4 py-2 font-medium text-white transition-colors duration-200 hover:bg-blue-700 disabled:cursor-not-allowed disabled:opacity-50&quot;&#10;                      disabled={&#10;                        isSubmitting || isLoadingTypes || !isFormValid()&#10;                      }&#10;                    &gt;&#10;                      {isSubmitting ? (&#10;                        &lt;LoadingSpinner variant=&quot;dots&quot; message=&quot;&quot; /&gt;&#10;                      ) : (&#10;                        &lt;Save className=&quot;h-4 w-4&quot; /&gt;&#10;                      )}&#10;                      {isSubmitting ? &quot;添加中...&quot; : &quot;添加物料&quot;}&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/form&gt;&#10;              &lt;/&gt;&#10;            )}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;&#10;      {/* QR Scanner Modal */}&#10;      {isScanning &amp;&amp; (&#10;        &lt;motion.div&#10;          className=&quot;bg-opacity-75 fixed inset-0 z-60 flex items-center justify-center bg-black&quot;&#10;          initial={{ opacity: 0 }}&#10;          animate={{ opacity: 1 }}&#10;          exit={{ opacity: 0 }}&#10;        &gt;&#10;          &lt;div className=&quot;relative mx-4 w-full max-w-md&quot;&gt;&#10;            &lt;motion.div&#10;              className=&quot;rounded-2xl bg-white p-6 shadow-2xl&quot;&#10;              initial={{ scale: 0.8, opacity: 0 }}&#10;              animate={{ scale: 1, opacity: 1 }}&#10;              exit={{ scale: 0.8, opacity: 0 }}&#10;            &gt;&#10;              &lt;div className=&quot;mb-4 flex items-center justify-between&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                  掃描QR碼/條碼&#10;                &lt;/h3&gt;&#10;                &lt;button&#10;                  onClick={stopScanning}&#10;                  className=&quot;flex h-8 w-8 items-center justify-center rounded-full bg-gray-200 transition-colors duration-200 hover:bg-gray-300&quot;&#10;                &gt;&#10;                  &lt;Close className=&quot;h-4 w-4&quot; /&gt;&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;relative overflow-hidden rounded-xl bg-gray-100&quot;&gt;&#10;                &lt;video&#10;                  ref={videoRef}&#10;                  className=&quot;h-64 w-full object-cover&quot;&#10;                  playsInline&#10;                /&gt;&#10;                &lt;div className=&quot;absolute inset-0 border-2 border-dashed border-blue-500 opacity-50&quot;&gt;&lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;p className=&quot;mt-4 text-center text-sm text-gray-600&quot;&gt;&#10;                將QR碼或條碼對準相機進行掃描&#10;              &lt;/p&gt;&#10;            &lt;/motion.div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/motion.div&gt;&#10;      )}&#10;    &lt;/motion.div&gt;&#10;  );&#10;};&#10;&#10;export default AddMaterial;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/src/pages/InventoryOverview.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/src/pages/InventoryOverview.jsx" />
              <option name="originalContent" value="import React, { useState, useEffect } from &quot;react&quot;;&#10;import { AnimatePresence, motion } from &quot;framer-motion&quot;;&#10;import { useNavigate } from &quot;react-router-dom&quot;;&#10;import Header from &quot;../componenets/Header.jsx&quot;;&#10;import LoadingSpinner from &quot;../componenets/LoadingSpinner.jsx&quot;;&#10;import FetchDataFail from &quot;../componenets/FetchDataFail.jsx&quot;;&#10;import {&#10;  Inventory,&#10;  Search,&#10;  ViewList,&#10;  ViewModule,&#10;  Inventory2,&#10;  CheckCircle,&#10;  Category,&#10;  AssignmentTurnedIn,&#10;} from &quot;@mui/icons-material&quot;;&#10;import { ItemIcon, LotIcon } from &quot;../componenets/CustomIcons.jsx&quot;;&#10;import api from &quot;../services/api.js&quot;;&#10;import {&#10;  backgroundVariants,&#10;  commonAnimationVariantsOne,&#10;} from &quot;../utils/styles.js&quot;;&#10;import AddButton from &quot;../componenets/AddButton.jsx&quot;;&#10;import AddMaterial from &quot;../componenets/AddMaterial.jsx&quot;;&#10;&#10;const InventoryOverview = () =&gt; {&#10;  const navigate = useNavigate();&#10;  const [materialTypeQuantities, setMaterialTypeQuantities] = useState([]);&#10;  const [isLoading, setIsLoading] = useState(true);&#10;  const [error, setError] = useState(&quot;&quot;);&#10;  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);&#10;  const [viewMode, setViewMode] = useState(&quot;grid&quot;); // &quot;list&quot; or &quot;grid&quot;&#10;  const [stats, setStats] = useState({&#10;    totalItems: 0,&#10;    availableItems: 0,&#10;    assignedItems: 0,&#10;    usedItems: 0,&#10;    totalLots: 0,&#10;    materialTypes: 0,&#10;  });&#10;  const [showAddMaterial, setShowAddMaterial] = useState(false);&#10;&#10;  // Extract common animation variants from utils&#10;  const { pageVariants, pageTransition, cardVariants } =&#10;    commonAnimationVariantsOne;&#10;&#10;  useEffect(() =&gt; {&#10;    fetchInventoryData();&#10;  }, []);&#10;&#10;  const fetchInventoryData = async () =&gt; {&#10;    try {&#10;      // Fetch material type quantities and lots data&#10;      const [materialTypeQuantitiesRes, lotsRes] = await Promise.all([&#10;        api.getMaterialTypeQuantity(),&#10;        api.getLots(),&#10;      ]);&#10;&#10;      if (materialTypeQuantitiesRes.ok &amp;&amp; lotsRes.ok) {&#10;        const materialTypeQuantitiesData =&#10;          await materialTypeQuantitiesRes.json();&#10;        const lotsData = await lotsRes.json();&#10;&#10;        setMaterialTypeQuantities(&#10;          materialTypeQuantitiesData.material_type_quantities || [],&#10;        );&#10;&#10;        // Calculate stats from material type quantities&#10;        const totalItems =&#10;          materialTypeQuantitiesData.material_type_quantities.reduce(&#10;            (sum, type) =&gt; sum + type.total_items,&#10;            0,&#10;          );&#10;        const availableItems =&#10;          materialTypeQuantitiesData.material_type_quantities.reduce(&#10;            (sum, type) =&gt; sum + type.available_items,&#10;            0,&#10;          );&#10;        const assignedItems =&#10;          materialTypeQuantitiesData.material_type_quantities.reduce(&#10;            (sum, type) =&gt; sum + type.assigned_items,&#10;            0,&#10;          );&#10;        const usedItems =&#10;          materialTypeQuantitiesData.material_type_quantities.reduce(&#10;            (sum, type) =&gt; sum + type.used_items,&#10;            0,&#10;          );&#10;&#10;        setStats({&#10;          totalItems,&#10;          availableItems,&#10;          assignedItems,&#10;          usedItems,&#10;          totalLots: lotsData.length,&#10;          materialTypes: materialTypeQuantitiesData.total_material_types || 0,&#10;        });&#10;      } else {&#10;        setError(materialTypeQuantitiesRes.status);&#10;      }&#10;    } catch (err) {&#10;      setError(err);&#10;      console.error(err.message);&#10;    } finally {&#10;      setIsLoading(false);&#10;    }&#10;  };&#10;  // Filter material types based on search and status&#10;  const filteredMaterialTypes = materialTypeQuantities.filter(&#10;    (materialType) =&gt; {&#10;      const matchesSearch =&#10;        materialType.material_name&#10;          .toLowerCase()&#10;          .includes(searchTerm.toLowerCase()) ||&#10;        materialType.material_type_id&#10;          .toLowerCase()&#10;          .includes(searchTerm.toLowerCase());&#10;&#10;      let matchesStatus = true;&#10;&#10;      return matchesSearch &amp;&amp; matchesStatus;&#10;    },&#10;  );&#10;&#10;  if (isLoading) {&#10;    return (&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.inventory}&#10;      &gt;&#10;        &lt;Header title={&quot;庫存總覽&quot;} /&gt;&#10;        &lt;div className=&quot;flex h-64 items-center justify-center&quot;&gt;&#10;          &lt;LoadingSpinner variant=&quot;circular&quot; size={30} message=&quot;載入中&quot; /&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;    );&#10;  }&#10;&#10;  if (error) {&#10;    return (&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.inventory}&#10;      &gt;&#10;        &lt;Header title={&quot;庫存總覽&quot;} /&gt;&#10;        &lt;FetchDataFail&#10;          error={error}&#10;          onRetry={fetchInventoryData}&#10;          className=&quot;h-64&quot;&#10;        /&gt;&#10;      &lt;/motion.div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full bg-gradient-to-br from-gray-50 to-gray-100&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.inventory}&#10;      &gt;&#10;        &lt;Header title={&quot;庫存總覽&quot;} /&gt;&#10;&#10;        &lt;div className=&quot;px-6 py-8&quot;&gt;&#10;          &lt;div className=&quot;mx-auto max-w-6xl&quot;&gt;&#10;            {/* Statistics Cards */}&#10;            &lt;motion.div&#10;              className=&quot;mb-8 grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-6&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.3, duration: 0.3 }}&#10;            &gt;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.1 }}&#10;                onClick={() =&gt; navigate(&quot;/item_overview&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-blue-100&quot;&gt;&#10;                    &lt;ItemIcon className=&quot;text-blue h-5 w-5&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;總物件&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.totalItems}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.2 }}&#10;                onClick={() =&gt; navigate(&quot;/item_overview?status=available&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-green-100&quot;&gt;&#10;                    &lt;CheckCircle className=&quot;h-5 w-5 text-green-800&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;可用&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.availableItems}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.3 }}&#10;                onClick={() =&gt; navigate(&quot;/item_overview?status=assigned&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-yellow-100&quot;&gt;&#10;                    &lt;AssignmentTurnedIn className=&quot;h-5 w-5 text-yellow-800&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;已分配&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.assignedItems}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.4 }}&#10;                onClick={() =&gt; navigate(&quot;/item_overview?status=used&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-red-100&quot;&gt;&#10;                    &lt;Inventory2 className=&quot;h-5 w-5 text-red-800&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;已使用&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.usedItems}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.5 }}&#10;                onClick={() =&gt; navigate(&quot;/lot_overview&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-fuchsia-100&quot;&gt;&#10;                    &lt;LotIcon className=&quot;h-5 w-5 text-fuchsia-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;批次數&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.totalLots}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism rounded-2xl border border-gray-100 p-4 shadow-lg&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.6 }}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-cyan-100&quot;&gt;&#10;                    &lt;Category className=&quot;h-5 w-5 text-cyan-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;物料類型&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.materialTypes}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* Search and Filter */}&#10;            &lt;motion.div&#10;              className=&quot;mb-6 flex flex-col gap-4 md:flex-row md:items-center md:justify-between&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.4, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;relative max-w-md flex-1&quot;&gt;&#10;                &lt;Search className=&quot;absolute top-1/2 left-3 z-10 h-5 w-5 -translate-y-1/2 text-gray-400&quot; /&gt;&#10;                &lt;input&#10;                  type=&quot;text&quot;&#10;                  placeholder=&quot;搜索物料類型 ID 或名稱...&quot;&#10;                  className=&quot;glassmorphism w-full rounded-xl border border-gray-300 py-3 pr-4 pl-10 transition-all duration-200 focus:border-transparent focus:ring-2 focus:ring-blue-500&quot;&#10;                  value={searchTerm}&#10;                  onChange={(e) =&gt; setSearchTerm(e.target.value)}&#10;                /&gt;&#10;              &lt;/div&gt;&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* Items List/Grid */}&#10;            &lt;motion.div&#10;              className=&quot;glassmorphism overflow-hidden rounded-2xl border border-gray-100 shadow-lg&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.5, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center justify-between border-b border-gray-200 bg-gray-50 px-6 py-4&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                  物料類型清單 ({filteredMaterialTypes.length})&#10;                &lt;/h3&gt;&#10;                &lt;button&#10;                  onClick={() =&gt;&#10;                    setViewMode(viewMode === &quot;list&quot; ? &quot;grid&quot; : &quot;list&quot;)&#10;                  }&#10;                  className=&quot;glassmorphism flex items-center gap-2 rounded-xl border border-gray-100 px-4 py-2 text-gray-600 shadow-sm transition-colors duration-200 hover:bg-gray-50&quot;&#10;                &gt;&#10;                  {viewMode === &quot;list&quot; ? (&#10;                    &lt;ViewModule className=&quot;h-5 w-5&quot; /&gt;&#10;                  ) : (&#10;                    &lt;ViewList className=&quot;h-5 w-5&quot; /&gt;&#10;                  )}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;&#10;              {filteredMaterialTypes.length === 0 ? (&#10;                &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;                  &lt;Inventory className=&quot;mx-auto h-12 w-12 text-gray-400&quot; /&gt;&#10;                  &lt;p className=&quot;mt-2 text-gray-500&quot;&gt;&#10;                    {searchTerm !== &quot;all&quot;&#10;                      ? &quot;沒有符合條件的物料類型&quot;&#10;                      : &quot;暫無物料類型資料&quot;}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              ) : viewMode === &quot;list&quot; ? (&#10;                &lt;div className=&quot;overflow-x-auto&quot;&gt;&#10;                  &lt;table className=&quot;w-full&quot;&gt;&#10;                    &lt;thead className=&quot;bg-gray-50&quot;&gt;&#10;                      &lt;tr&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          物料類型 ID&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          物料類型名稱&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          可用數量&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          已分配數量&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          已使用數量&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          總數量&#10;                        &lt;/th&gt;&#10;                      &lt;/tr&gt;&#10;                    &lt;/thead&gt;&#10;                    &lt;tbody className=&quot;glassmorphism divide-y divide-gray-200&quot;&gt;&#10;                      {filteredMaterialTypes.map((materialType, index) =&gt; (&#10;                        &lt;motion.tr&#10;                          key={materialType.material_type_id}&#10;                          className=&quot;cursor-pointer transition-colors duration-200 hover:bg-gray-50&quot;&#10;                          initial={{ opacity: 0, x: -20 }}&#10;                          animate={{ opacity: 1, x: 0 }}&#10;                          transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                          onClick={() =&gt;&#10;                            navigate(&#10;                              `/lot_overview/${materialType.material_type_id}`,&#10;                            )&#10;                          }&#10;                        &gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center&quot;&gt;&#10;                              &lt;div className=&quot;flex h-8 w-8 items-center justify-center rounded-full bg-cyan-100&quot;&gt;&#10;                                &lt;Category&#10;                                  className=&quot;text-cyan-600&quot;&#10;                                  sx={{ fontSize: 18 }}&#10;                                /&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;ml-3&quot;&gt;&#10;                                &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                                  {materialType.material_type_id}&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                              {materialType.material_name}&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-sm text-gray-500&quot;&gt;&#10;                              單位: {materialType.material_unit}&#10;                            &lt;/div&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;span className=&quot;inline-flex items-center gap-1 rounded-full bg-green-100 px-3 py-1 text-sm font-semibold text-green-800&quot;&gt;&#10;                              &lt;CheckCircle className=&quot;h-3 w-3&quot; /&gt;&#10;                              {materialType.available_quantity}{&quot; &quot;}&#10;                              {materialType.material_unit}&#10;                            &lt;/span&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;span className=&quot;inline-flex items-center gap-1 rounded-full bg-yellow-100 px-3 py-1 text-sm font-semibold text-yellow-800&quot;&gt;&#10;                              &lt;AssignmentTurnedIn className=&quot;h-3 w-3&quot; /&gt;&#10;                              {materialType.assigned_quantity}{&quot; &quot;}&#10;                              {materialType.material_unit}&#10;                            &lt;/span&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;span className=&quot;inline-flex items-center gap-1 rounded-full bg-red-100 px-3 py-1 text-sm font-semibold text-red-800&quot;&gt;&#10;                              &lt;Inventory2 className=&quot;h-3 w-3&quot; /&gt;&#10;                              {materialType.used_quantity}{&quot; &quot;}&#10;                              {materialType.material_unit}&#10;                            &lt;/span&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm font-bold whitespace-nowrap text-gray-900&quot;&gt;&#10;                            {materialType.total_quantity}{&quot; &quot;}&#10;                            {materialType.material_unit}&#10;                          &lt;/td&gt;&#10;                        &lt;/motion.tr&gt;&#10;                      ))}&#10;                    &lt;/tbody&gt;&#10;                  &lt;/table&gt;&#10;                &lt;/div&gt;&#10;              ) : (&#10;                &lt;div className=&quot;grid grid-cols-1 gap-4 p-6 md:grid-cols-2 lg:grid-cols-3&quot;&gt;&#10;                  {filteredMaterialTypes.map((materialType, index) =&gt; (&#10;                    &lt;motion.div&#10;                      key={materialType.material_type_id}&#10;                      className=&quot;cursor-pointer rounded-xl border border-gray-200 bg-gray-50 p-4 transition-shadow duration-200 hover:shadow-md&quot;&#10;                      initial={{ opacity: 0, scale: 0.9 }}&#10;                      animate={{ opacity: 1, scale: 1 }}&#10;                      transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                      onClick={() =&gt;&#10;                        navigate(&#10;                          `/lot_overview/${materialType.material_type_id}`,&#10;                        )&#10;                      }&#10;                    &gt;&#10;                      &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                          &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-cyan-100&quot;&gt;&#10;                            &lt;Category className=&quot;h-5 w-5 text-cyan-600&quot; /&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;h4 className=&quot;font-medium text-gray-900&quot;&gt;&#10;                              {materialType.material_name}&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-500&quot;&gt;&#10;                              {materialType.material_type_id}&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#10;                          &lt;div className=&quot;text-sm font-bold text-gray-900&quot;&gt;&#10;                            {materialType.total_quantity}{&quot; &quot;}&#10;                            {materialType.material_unit}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;總數量&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;mt-4 grid grid-cols-3 gap-2&quot;&gt;&#10;                        &lt;div className=&quot;text-center&quot;&gt;&#10;                          &lt;div className=&quot;inline-flex items-center gap-1 rounded-full bg-green-100 px-2 py-1 text-xs font-semibold text-green-800&quot;&gt;&#10;                            &lt;CheckCircle className=&quot;h-3 w-3&quot; /&gt;&#10;                            {materialType.available_quantity}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;mt-1 text-xs text-gray-500&quot;&gt;可用&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;text-center&quot;&gt;&#10;                          &lt;div className=&quot;inline-flex items-center gap-1 rounded-full bg-yellow-100 px-2 py-1 text-xs font-semibold text-yellow-800&quot;&gt;&#10;                            &lt;AssignmentTurnedIn className=&quot;h-3 w-3&quot; /&gt;&#10;                            {materialType.assigned_quantity}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;mt-1 text-xs text-gray-500&quot;&gt;&#10;                            已分配&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;text-center&quot;&gt;&#10;                          &lt;div className=&quot;inline-flex items-center gap-1 rounded-full bg-red-100 px-2 py-1 text-xs font-semibold text-red-800&quot;&gt;&#10;                            &lt;Inventory2 className=&quot;h-3 w-3&quot; /&gt;&#10;                            {materialType.used_quantity}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;mt-1 text-xs text-gray-500&quot;&gt;&#10;                            已使用&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/motion.div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/motion.div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;      &lt;AnimatePresence&gt;&#10;        {showAddMaterial &amp;&amp; (&#10;          &lt;AddMaterial&#10;            open={showAddMaterial}&#10;            onClose={() =&gt; setShowAddMaterial(false)}&#10;          /&gt;&#10;        )}&#10;      &lt;/AnimatePresence&gt;&#10;      &lt;AddButton action={() =&gt; setShowAddMaterial(true)} /&gt;&#10;    &lt;/&gt;&#10;  );&#10;};&#10;&#10;export default InventoryOverview;&#10;" />
              <option name="updatedContent" value="import React, { useState, useEffect } from &quot;react&quot;;&#10;import { AnimatePresence, motion } from &quot;framer-motion&quot;;&#10;import { useNavigate } from &quot;react-router-dom&quot;;&#10;import Header from &quot;../componenets/Header.jsx&quot;;&#10;import LoadingSpinner from &quot;../componenets/LoadingSpinner.jsx&quot;;&#10;import FetchDataFail from &quot;../componenets/FetchDataFail.jsx&quot;;&#10;import {&#10;  Inventory,&#10;  Search,&#10;  ViewList,&#10;  ViewModule,&#10;  Inventory2,&#10;  CheckCircle,&#10;  Category,&#10;  AssignmentTurnedIn,&#10;} from &quot;@mui/icons-material&quot;;&#10;import { ItemIcon, LotIcon } from &quot;../componenets/CustomIcons.jsx&quot;;&#10;import api from &quot;../services/api.js&quot;;&#10;import {&#10;  backgroundVariants,&#10;  commonAnimationVariantsOne,&#10;} from &quot;../utils/styles.js&quot;;&#10;import AddButton from &quot;../componenets/AddButton.jsx&quot;;&#10;import AddMaterial from &quot;../componenets/AddMaterial.jsx&quot;;&#10;&#10;const InventoryOverview = () =&gt; {&#10;  const navigate = useNavigate();&#10;  const [materialTypeQuantities, setMaterialTypeQuantities] = useState([]);&#10;  const [isLoading, setIsLoading] = useState(true);&#10;  const [error, setError] = useState(&quot;&quot;);&#10;  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);&#10;  const [viewMode, setViewMode] = useState(&quot;grid&quot;); // &quot;list&quot; or &quot;grid&quot;&#10;  const [stats, setStats] = useState({&#10;    totalItems: 0,&#10;    availableItems: 0,&#10;    assignedItems: 0,&#10;    usedItems: 0,&#10;    totalLots: 0,&#10;    materialTypes: 0,&#10;  });&#10;  const [showAddMaterial, setShowAddMaterial] = useState(false);&#10;&#10;  // Extract common animation variants from utils&#10;  const { pageVariants, pageTransition, cardVariants } =&#10;    commonAnimationVariantsOne;&#10;&#10;  useEffect(() =&gt; {&#10;    fetchInventoryData();&#10;  }, []);&#10;&#10;  const fetchInventoryData = async () =&gt; {&#10;    try {&#10;      // Fetch material type quantities and lots data&#10;      const [materialTypeQuantitiesRes, lotsRes] = await Promise.all([&#10;        api.getMaterialTypeQuantity(),&#10;        api.getLots(),&#10;      ]);&#10;&#10;      if (materialTypeQuantitiesRes.ok &amp;&amp; lotsRes.ok) {&#10;        const materialTypeQuantitiesData =&#10;          await materialTypeQuantitiesRes.json();&#10;        const lotsData = await lotsRes.json();&#10;&#10;        setMaterialTypeQuantities(&#10;          materialTypeQuantitiesData.material_type_quantities || [],&#10;        );&#10;&#10;        // Calculate stats from material type quantities&#10;        const totalItems =&#10;          materialTypeQuantitiesData.material_type_quantities.reduce(&#10;            (sum, type) =&gt; sum + type.total_items,&#10;            0,&#10;          );&#10;        const availableItems =&#10;          materialTypeQuantitiesData.material_type_quantities.reduce(&#10;            (sum, type) =&gt; sum + type.available_items,&#10;            0,&#10;          );&#10;        const assignedItems =&#10;          materialTypeQuantitiesData.material_type_quantities.reduce(&#10;            (sum, type) =&gt; sum + type.assigned_items,&#10;            0,&#10;          );&#10;        const usedItems =&#10;          materialTypeQuantitiesData.material_type_quantities.reduce(&#10;            (sum, type) =&gt; sum + type.used_items,&#10;            0,&#10;          );&#10;&#10;        setStats({&#10;          totalItems,&#10;          availableItems,&#10;          assignedItems,&#10;          usedItems,&#10;          totalLots: lotsData.length,&#10;          materialTypes: materialTypeQuantitiesData.total_material_types || 0,&#10;        });&#10;      } else {&#10;        setError(materialTypeQuantitiesRes.status);&#10;      }&#10;    } catch (err) {&#10;      setError(err);&#10;      console.error(err.message);&#10;    } finally {&#10;      setIsLoading(false);&#10;    }&#10;  };&#10;  // Filter material types based on search and status&#10;  const filteredMaterialTypes = materialTypeQuantities.filter(&#10;    (materialType) =&gt; {&#10;      const matchesSearch =&#10;        materialType.material_name&#10;          .toLowerCase()&#10;          .includes(searchTerm.toLowerCase()) ||&#10;        materialType.material_type_id&#10;          .toLowerCase()&#10;          .includes(searchTerm.toLowerCase());&#10;&#10;      let matchesStatus = true;&#10;&#10;      return matchesSearch &amp;&amp; matchesStatus;&#10;    },&#10;  );&#10;&#10;  const handleAddMaterialSuccess = () =&gt; {&#10;    fetchInventoryData();&#10;  };&#10;&#10;  if (isLoading) {&#10;    return (&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.inventory}&#10;      &gt;&#10;        &lt;Header title={&quot;庫存總覽&quot;} /&gt;&#10;        &lt;div className=&quot;flex h-64 items-center justify-center&quot;&gt;&#10;          &lt;LoadingSpinner variant=&quot;circular&quot; size={30} message=&quot;載入中&quot; /&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;    );&#10;  }&#10;&#10;  if (error) {&#10;    return (&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.inventory}&#10;      &gt;&#10;        &lt;Header title={&quot;庫存總覽&quot;} /&gt;&#10;        &lt;FetchDataFail&#10;          error={error}&#10;          onRetry={fetchInventoryData}&#10;          className=&quot;h-64&quot;&#10;        /&gt;&#10;      &lt;/motion.div&gt;&#10;    );&#10;  }&#10;&#10;  return (&#10;    &lt;&gt;&#10;      &lt;motion.div&#10;        className=&quot;min-h-screen w-full bg-gradient-to-br from-gray-50 to-gray-100&quot;&#10;        initial=&quot;initial&quot;&#10;        animate=&quot;in&quot;&#10;        exit=&quot;out&quot;&#10;        variants={pageVariants}&#10;        transition={pageTransition}&#10;        style={backgroundVariants.inventory}&#10;      &gt;&#10;        &lt;Header title={&quot;庫存總覽&quot;} /&gt;&#10;&#10;        &lt;div className=&quot;px-6 py-8&quot;&gt;&#10;          &lt;div className=&quot;mx-auto max-w-6xl&quot;&gt;&#10;            {/* Statistics Cards */}&#10;            &lt;motion.div&#10;              className=&quot;mb-8 grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-6&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.3, duration: 0.3 }}&#10;            &gt;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.1 }}&#10;                onClick={() =&gt; navigate(&quot;/item_overview&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-blue-100&quot;&gt;&#10;                    &lt;ItemIcon className=&quot;text-blue h-5 w-5&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;總物件&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.totalItems}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.2 }}&#10;                onClick={() =&gt; navigate(&quot;/item_overview?status=available&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-green-100&quot;&gt;&#10;                    &lt;CheckCircle className=&quot;h-5 w-5 text-green-800&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;可用&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.availableItems}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.3 }}&#10;                onClick={() =&gt; navigate(&quot;/item_overview?status=assigned&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-yellow-100&quot;&gt;&#10;                    &lt;AssignmentTurnedIn className=&quot;h-5 w-5 text-yellow-800&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;已分配&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.assignedItems}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.4 }}&#10;                onClick={() =&gt; navigate(&quot;/item_overview?status=used&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-red-100&quot;&gt;&#10;                    &lt;Inventory2 className=&quot;h-5 w-5 text-red-800&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;已使用&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.usedItems}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism cursor-pointer rounded-2xl border border-gray-100 p-4 shadow-lg transition-all duration-200 hover:scale-105 hover:shadow-xl&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.5 }}&#10;                onClick={() =&gt; navigate(&quot;/lot_overview&quot;)}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-fuchsia-100&quot;&gt;&#10;                    &lt;LotIcon className=&quot;h-5 w-5 text-fuchsia-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;批次數&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.totalLots}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;&#10;              &lt;motion.div&#10;                className=&quot;glassmorphism rounded-2xl border border-gray-100 p-4 shadow-lg&quot;&#10;                variants={cardVariants}&#10;                initial=&quot;hidden&quot;&#10;                animate=&quot;visible&quot;&#10;                transition={{ delay: 0.6 }}&#10;              &gt;&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-cyan-100&quot;&gt;&#10;                    &lt;Category className=&quot;h-5 w-5 text-cyan-600&quot; /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-600&quot;&gt;物料類型&lt;/p&gt;&#10;                    &lt;p className=&quot;text-xl font-bold text-gray-800&quot;&gt;&#10;                      {stats.materialTypes}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/motion.div&gt;&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* Search and Filter */}&#10;            &lt;motion.div&#10;              className=&quot;mb-6 flex flex-col gap-4 md:flex-row md:items-center md:justify-between&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.4, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;relative max-w-md flex-1&quot;&gt;&#10;                &lt;Search className=&quot;absolute top-1/2 left-3 z-10 h-5 w-5 -translate-y-1/2 text-gray-400&quot; /&gt;&#10;                &lt;input&#10;                  type=&quot;text&quot;&#10;                  placeholder=&quot;搜索物料類型 ID 或名稱...&quot;&#10;                  className=&quot;glassmorphism w-full rounded-xl border border-gray-300 py-3 pr-4 pl-10 transition-all duration-200 focus:border-transparent focus:ring-2 focus:ring-blue-500&quot;&#10;                  value={searchTerm}&#10;                  onChange={(e) =&gt; setSearchTerm(e.target.value)}&#10;                /&gt;&#10;              &lt;/div&gt;&#10;            &lt;/motion.div&gt;&#10;&#10;            {/* Items List/Grid */}&#10;            &lt;motion.div&#10;              className=&quot;glassmorphism overflow-hidden rounded-2xl border border-gray-100 shadow-lg&quot;&#10;              initial={{ opacity: 0, y: 20 }}&#10;              animate={{ opacity: 1, y: 0 }}&#10;              transition={{ delay: 0.5, duration: 0.3 }}&#10;            &gt;&#10;              &lt;div className=&quot;flex items-center justify-between border-b border-gray-200 bg-gray-50 px-6 py-4&quot;&gt;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-800&quot;&gt;&#10;                  物料類型清單 ({filteredMaterialTypes.length})&#10;                &lt;/h3&gt;&#10;                &lt;button&#10;                  onClick={() =&gt;&#10;                    setViewMode(viewMode === &quot;list&quot; ? &quot;grid&quot; : &quot;list&quot;)&#10;                  }&#10;                  className=&quot;glassmorphism flex items-center gap-2 rounded-xl border border-gray-100 px-4 py-2 text-gray-600 shadow-sm transition-colors duration-200 hover:bg-gray-50&quot;&#10;                &gt;&#10;                  {viewMode === &quot;list&quot; ? (&#10;                    &lt;ViewModule className=&quot;h-5 w-5&quot; /&gt;&#10;                  ) : (&#10;                    &lt;ViewList className=&quot;h-5 w-5&quot; /&gt;&#10;                  )}&#10;                &lt;/button&gt;&#10;              &lt;/div&gt;&#10;&#10;              {filteredMaterialTypes.length === 0 ? (&#10;                &lt;div className=&quot;p-8 text-center&quot;&gt;&#10;                  &lt;Inventory className=&quot;mx-auto h-12 w-12 text-gray-400&quot; /&gt;&#10;                  &lt;p className=&quot;mt-2 text-gray-500&quot;&gt;&#10;                    {searchTerm !== &quot;all&quot;&#10;                      ? &quot;沒有符合條件的物料類型&quot;&#10;                      : &quot;暫無物料類型資料&quot;}&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;              ) : viewMode === &quot;list&quot; ? (&#10;                &lt;div className=&quot;overflow-x-auto&quot;&gt;&#10;                  &lt;table className=&quot;w-full&quot;&gt;&#10;                    &lt;thead className=&quot;bg-gray-50&quot;&gt;&#10;                      &lt;tr&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          物料類型 ID&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          物料類型名稱&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          可用數量&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          已分配數量&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          已使用數量&#10;                        &lt;/th&gt;&#10;                        &lt;th className=&quot;px-6 py-3 text-left text-xs font-medium tracking-wider text-gray-500 uppercase&quot;&gt;&#10;                          總數量&#10;                        &lt;/th&gt;&#10;                      &lt;/tr&gt;&#10;                    &lt;/thead&gt;&#10;                    &lt;tbody className=&quot;glassmorphism divide-y divide-gray-200&quot;&gt;&#10;                      {filteredMaterialTypes.map((materialType, index) =&gt; (&#10;                        &lt;motion.tr&#10;                          key={materialType.material_type_id}&#10;                          className=&quot;cursor-pointer transition-colors duration-200 hover:bg-gray-50&quot;&#10;                          initial={{ opacity: 0, x: -20 }}&#10;                          animate={{ opacity: 1, x: 0 }}&#10;                          transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                          onClick={() =&gt;&#10;                            navigate(&#10;                              `/lot_overview/${materialType.material_type_id}`,&#10;                            )&#10;                          }&#10;                        &gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;div className=&quot;flex items-center&quot;&gt;&#10;                              &lt;div className=&quot;flex h-8 w-8 items-center justify-center rounded-full bg-cyan-100&quot;&gt;&#10;                                &lt;Category&#10;                                  className=&quot;text-cyan-600&quot;&#10;                                  sx={{ fontSize: 18 }}&#10;                                /&gt;&#10;                              &lt;/div&gt;&#10;                              &lt;div className=&quot;ml-3&quot;&gt;&#10;                                &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                                  {materialType.material_type_id}&#10;                                &lt;/div&gt;&#10;                              &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;div className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                              {materialType.material_name}&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;text-sm text-gray-500&quot;&gt;&#10;                              單位: {materialType.material_unit}&#10;                            &lt;/div&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;span className=&quot;inline-flex items-center gap-1 rounded-full bg-green-100 px-3 py-1 text-sm font-semibold text-green-800&quot;&gt;&#10;                              &lt;CheckCircle className=&quot;h-3 w-3&quot; /&gt;&#10;                              {materialType.available_quantity}{&quot; &quot;}&#10;                              {materialType.material_unit}&#10;                            &lt;/span&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;span className=&quot;inline-flex items-center gap-1 rounded-full bg-yellow-100 px-3 py-1 text-sm font-semibold text-yellow-800&quot;&gt;&#10;                              &lt;AssignmentTurnedIn className=&quot;h-3 w-3&quot; /&gt;&#10;                              {materialType.assigned_quantity}{&quot; &quot;}&#10;                              {materialType.material_unit}&#10;                            &lt;/span&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 whitespace-nowrap&quot;&gt;&#10;                            &lt;span className=&quot;inline-flex items-center gap-1 rounded-full bg-red-100 px-3 py-1 text-sm font-semibold text-red-800&quot;&gt;&#10;                              &lt;Inventory2 className=&quot;h-3 w-3&quot; /&gt;&#10;                              {materialType.used_quantity}{&quot; &quot;}&#10;                              {materialType.material_unit}&#10;                            &lt;/span&gt;&#10;                          &lt;/td&gt;&#10;                          &lt;td className=&quot;px-6 py-4 text-sm font-bold whitespace-nowrap text-gray-900&quot;&gt;&#10;                            {materialType.total_quantity}{&quot; &quot;}&#10;                            {materialType.material_unit}&#10;                          &lt;/td&gt;&#10;                        &lt;/motion.tr&gt;&#10;                      ))}&#10;                    &lt;/tbody&gt;&#10;                  &lt;/table&gt;&#10;                &lt;/div&gt;&#10;              ) : (&#10;                &lt;div className=&quot;grid grid-cols-1 gap-4 p-6 md:grid-cols-2 lg:grid-cols-3&quot;&gt;&#10;                  {filteredMaterialTypes.map((materialType, index) =&gt; (&#10;                    &lt;motion.div&#10;                      key={materialType.material_type_id}&#10;                      className=&quot;cursor-pointer rounded-xl border border-gray-200 bg-gray-50 p-4 transition-shadow duration-200 hover:shadow-md&quot;&#10;                      initial={{ opacity: 0, scale: 0.9 }}&#10;                      animate={{ opacity: 1, scale: 1 }}&#10;                      transition={{ delay: index * 0.05, duration: 0.2 }}&#10;                      onClick={() =&gt;&#10;                        navigate(&#10;                          `/lot_overview/${materialType.material_type_id}`,&#10;                        )&#10;                      }&#10;                    &gt;&#10;                      &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                        &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                          &lt;div className=&quot;flex h-10 w-10 items-center justify-center rounded-full bg-cyan-100&quot;&gt;&#10;                            &lt;Category className=&quot;h-5 w-5 text-cyan-600&quot; /&gt;&#10;                          &lt;/div&gt;&#10;                          &lt;div&gt;&#10;                            &lt;h4 className=&quot;font-medium text-gray-900&quot;&gt;&#10;                              {materialType.material_name}&#10;                            &lt;/h4&gt;&#10;                            &lt;p className=&quot;text-sm text-gray-500&quot;&gt;&#10;                              {materialType.material_type_id}&#10;                            &lt;/p&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;text-right&quot;&gt;&#10;                          &lt;div className=&quot;text-sm font-bold text-gray-900&quot;&gt;&#10;                            {materialType.total_quantity}{&quot; &quot;}&#10;                            {materialType.material_unit}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;text-xs text-gray-500&quot;&gt;總數量&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;&#10;                      &lt;div className=&quot;mt-4 grid grid-cols-3 gap-2&quot;&gt;&#10;                        &lt;div className=&quot;text-center&quot;&gt;&#10;                          &lt;div className=&quot;inline-flex items-center gap-1 rounded-full bg-green-100 px-2 py-1 text-xs font-semibold text-green-800&quot;&gt;&#10;                            &lt;CheckCircle className=&quot;h-3 w-3&quot; /&gt;&#10;                            {materialType.available_quantity}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;mt-1 text-xs text-gray-500&quot;&gt;可用&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;text-center&quot;&gt;&#10;                          &lt;div className=&quot;inline-flex items-center gap-1 rounded-full bg-yellow-100 px-2 py-1 text-xs font-semibold text-yellow-800&quot;&gt;&#10;                            &lt;AssignmentTurnedIn className=&quot;h-3 w-3&quot; /&gt;&#10;                            {materialType.assigned_quantity}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;mt-1 text-xs text-gray-500&quot;&gt;&#10;                            已分配&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div className=&quot;text-center&quot;&gt;&#10;                          &lt;div className=&quot;inline-flex items-center gap-1 rounded-full bg-red-100 px-2 py-1 text-xs font-semibold text-red-800&quot;&gt;&#10;                            &lt;Inventory2 className=&quot;h-3 w-3&quot; /&gt;&#10;                            {materialType.used_quantity}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;mt-1 text-xs text-gray-500&quot;&gt;&#10;                            已使用&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/motion.div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/motion.div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/motion.div&gt;&#10;      &lt;AnimatePresence&gt;&#10;        {showAddMaterial &amp;&amp; (&#10;          &lt;AddMaterial&#10;            open={showAddMaterial}&#10;            onClose={() =&gt; setShowAddMaterial(false)}&#10;            onSuccess={handleAddMaterialSuccess}&#10;          /&gt;&#10;        )}&#10;      &lt;/AnimatePresence&gt;&#10;      &lt;AddButton action={() =&gt; setShowAddMaterial(true)} /&gt;&#10;    &lt;/&gt;&#10;  );&#10;};&#10;&#10;export default InventoryOverview;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>